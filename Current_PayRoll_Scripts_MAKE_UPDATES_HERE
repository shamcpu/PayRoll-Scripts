'
' BEGIN PAYROLL MACRO
'
Public Sub MAIN_PROCEDURE()

    '--BEGIN @weekending capture
    
    '@weekending - holds date value of user inputted week ending date
    Dim weekending As String
    weekending = InputBox("Please enter the Week Ending Date in the format mm/dd/yyyy", "WEEK ENDING")
        
    'Format Validation for weekending
    Do While Not IsDate(weekending)
        msg = MsgBox("Invalid format. Please type the date in the correct format: mm/dd/yyyy", vbOKOnly, "Invalid Date Format")
        weekending = InputBox("Please enter the Week Ending Date in the format mm/dd/yyyy", "WEEK ENDING")
    Loop
    
    'User Confirmation prompt verifying correct weekending date
    confirm = MsgBox("Is " & weekending & " the correct week ending date?", vbYesNo, "CONFIRM")
    
    'If user selects No, ask again
    Do While confirm = vbNo
        weekending = InputBox("Please enter the Week Ending Date in the format mm/dd/yyyy", "WEEK ENDING")
        
       'Date format validation
        Do While Not IsDate(weekending)
            msg = MsgBox("Invalid format. Please type the date in the correct format: mm/dd/yyyy", vbOKOnly, "Invalid Date Format")
            weekending = InputBox("Please enter the Week Ending Date in the format mm/dd/yyyy", "WEEK ENDING")
        Loop
        
        confirm = MsgBox("Is " & weekending & " the correct week ending date?", vbYesNoCancel, "CONFIRM")
    Loop
    
    '---END @weekending capture
    
    'Halt popups initiated by Excel
    Application.DisplayAlerts = False
    
    'Run procedure that sorts export file
    Payroll_Sort
     
    'Declare variables
    '@agencies - array for staffing agency names
    '@*rows - arrays for the start and end row#s for each agency (on export file); rows(0) = start, rows(1) = end
    '@totalLastRow - variable that holds last row# of export file
    Dim agencies(4) As String
    Dim ACSrows(1), JAMrows(1), OneWayRows(1), PartnersRows(1), ResourceRows(1) As Integer
    Dim totalLastRow As Integer
    totalLastRow = Range("A1").End(xlDown).row
    
    'Initialize @agencies
    agencies(0) = "ACS Staffing"
    agencies(1) = "JAM Staffing"
    agencies(2) = "OneWay Staffing"
    agencies(3) = "Partners"
    agencies(4) = "Resource"
    
    'Intialize @*rows to 2 (first row of data on the export file is 2)
    For k = 0 To 1
        ACSrows(k) = 2
        JAMrows(k) = 2
        OneWayRows(k) = 2
        PartnersRows(k) = 2
        ResourceRows(k) = 2
    Next k

    '-------------------------------------------------------------GEt START AND END ROW#s FOR ALL AGENCIES FROM EXPORT FILE------------------------------------------------------------------------
    'Activate export file worksheet
    Worksheets("Export File").Activate
    
    'ADD NEW RECLASSIFICATION COLUMN --ADDED 8/28/22
    'CALL PROCEDURE
    addReclassColumn
     
    'After PayrollSort procedure, ACS Staffing will always be first
    'get start and end row#s for each agency
    For i = 2 To totalLastRow
        If Range("G" & i) <> "ACS Staffing" Then
            
            ACSrows(1) = i - 1   'end ACS rows
            JAMrows(0) = i       'start JAM
            Exit For
                
        'if the last row = ACS Staffing then set start row#s for other agencies as totalLastRow
        ElseIf i = totalLastRow And Range("G" & i) = "ACS Staffing" Then
            ACSrows(1) = i
            JAMrows(0) = i
            ResourceRows(0) = i
            PartnersRows(0) = i
            OneWayRows(0) = i
        End If
    Next i
    
    If JAMrows(0) <> totalLastRow Then
        For i = JAMrows(0) To totalLastRow
            If Range("G" & i) <> "JAM Staffing" Then
                
                JAMrows(1) = i - 1   'end Jam
                OneWayRows(0) = i    'start OneWaYy
                Exit For
            End If
        Next i
        
        For i = OneWayRows(0) To totalLastRow
            If Range("G" & i) <> "OneWay Staffing" Then
                
                OneWayRows(1) = i - 1   'end OneWay
                PartnersRows(0) = i       'start Partners
                Exit For
            End If
        Next i
        
        For i = PartnersRows(0) To totalLastRow
            If Range("G" & i) <> "Partners Personnel" Then
                
                PartnersRows(1) = i - 1   'end Partners
                ResourceRows(0) = i       'start Resource
                Exit For
            End If
        Next i
        
        For i = ResourceRows(0) To totalLastRow
            If Range("G" & i) <> "Resource Employment" Then
                
                ResourceRows(1) = i - 1   'end Resource
                Exit For
            End If
        Next i
    End If
    
    
'-------------------------------------------------------------FINISH START AND END ROWS -----------------------------------------------------------------------
    
    '--------------------------------------------------------------PIVOT TABLE WORK---------------------------------------------------------
    ' Call procedure to create pivot table on new worksheet
    PivotTable totalLastRow
    
    ' Get pivot table row and column metrics
    ' @headers() - contains string values of possible pivot table headers
    ' @cols() - contains number column#s of respective header strings
    ' @weekOT - string letter of Weekly Overtime column (if exists)
    ' dailyOT - string letter of Daily Overtime column (if exists)
    Dim lastPivotRow As Integer
    Dim firstPivotRow As Integer
    Dim lastPivotColumn As String
    Dim lastcolumnNumber As Integer
    Dim headers(0 To 6) As String
    Dim cols(0 To 6) As Integer
    Dim weekOT As String, dailyOT As String
    
    ' first row of data on pivot table
    firstPivotRow = 5
    lastPivotRow = Range("A4").End(xlDown).row - 1  'excluding totals row
    ' Range("J1").Value = lastPivotRow ' display/troubleshooting purposes
    
    lastcolumnNumber = Cells(4, columns.Count).End(xlToLeft).Column
    lastPivotColumn = Split(Cells(1, lastcolumnNumber).Address, "$")(1)
        
    headers(0) = "Daily Double Time"
    headers(1) = "Daily Overtime"
    headers(2) = "Regular"
    headers(3) = "Sick"
    headers(4) = "Weekly Overtime"
    headers(5) = "Vacation"
    headers(6) = "Holiday"
    
    ' Default value 55 in case header does not exist in pivot table
    For n = 0 To 6
        cols(n) = 55
    Next n
    
    ' Iterate through pivot table headers excluding last column (totals)
    ' Gather column numbers if they exist
    For i = 2 To lastcolumnNumber - 1
        For j = 0 To UBound(cols)
            
            If headers(j) = Cells(4, i).Value Then
                cols(j) = i
                Exit For
            End If
            
        Next j
    Next i
    
    
    ' HANDLES THE POSSIBILITY OF EACH OR BOTH OVERTIME COLUMN HEADERS NOT EXISTING
    ' No weekly overtime
    If cols(4) = 55 And cols(1) <> 55 Then
        dailyOT = Split(Cells(1, cols(1)).Address, "$")(1)
        weekOT = "NONE"
    ' No daily overtime
    ElseIf cols(1) = 55 And cols(4) <> 55 Then
        dailyOT = "NONE"
        weekOT = Split(Cells(1, cols(4)).Address, "$")(1)
    ' No daily or weekly overtime
    ElseIf cols(1) = 55 And cols(4) = 55 Then
        dailyOT = "NONE"
        weekOT = "NONE"
    ' Both overtime columns exist
    Else
        weekOT = Split(Cells(1, cols(4)).Address, "$")(1)
        dailyOT = Split(Cells(1, cols(1)).Address, "$")(1)
    End If
    
    ' Run totalOT_Pivot procedure to add total OT column at the end of pivot table
    ' Store value in @lastPivotColumn
    lastPivotColumn = totalOT_Pivot(lastPivotRow, lastcolumnNumber, weekOT, dailyOT)
    
'--------------------------------------------------------------END PIVOT TABLE WORK-------------------------------------------------------------------
    
    ' @costCenter2 - array to hold all the clerical(non WHSE) cost centers
    ' @start - export file start row for agency (used for calling procedures)
    ' @endr - export file end row for agency (used for calling procedures)
    Dim costcenter2(7) As String
    Dim start As Integer
    Dim endr As Integer
    
    costcenter2(0) = "Accounting"
    costcenter2(1) = "Admin"
    costcenter2(2) = "Billing"
    costcenter2(3) = "Billing Write Up"
    costcenter2(4) = "Customer Service"
    costcenter2(5) = "Dispatch"
    costcenter2(6) = "Office"
    costcenter2(7) = "Yard Office"
    
    
    ' If Agency exists on export file, then create spreadsheet, and call setup procedure
        If ACSrows(0) <= ACSrows(1) Then
        
            Sheets.Add.Name = "ACS Staffing"
            start = ACSrows(0)
            endr = ACSrows(1)
            ACS weekending, start, endr, lastPivotRow, lastPivotColumn, cols(2), lastcolumnNumber + 1, cols(0), cols(3), cols(5), costcenter2()
            
        End If
        
        If JAMrows(0) <= JAMrows(1) Then
            
            Sheets.Add.Name = "JAM Staffing"
            start = JAMrows(0)
            endr = JAMrows(1)
            JAM weekending, start, endr, lastPivotRow, lastPivotColumn, cols(2), lastcolumnNumber + 1, cols(0), cols(3), cols(5), costcenter2()
            
        End If

        If OneWayRows(0) <= OneWayRows(1) Then
            
            Sheets.Add.Name = "OneWay Staffing"
            start = OneWayRows(0)
            endr = OneWayRows(1)
            OneWay weekending, start, endr, lastPivotRow, lastPivotColumn, cols(2), lastcolumnNumber + 1, cols(0), cols(3), cols(5), costcenter2()

        End If

        If PartnersRows(0) <= PartnersRows(1) Then
        
            Sheets.Add.Name = "Partners Tier 1"
            Sheets.Add.Name = "Partners Tier 3"
            start = PartnersRows(0)
            endr = PartnersRows(1)
            partners weekending, start, endr, lastPivotRow, lastPivotColumn, cols(2), lastcolumnNumber + 1, cols(0), cols(3), cols(5), cols(6), costcenter2()

        End If

        If ResourceRows(0) <= ResourceRows(1) Then
        
            Sheets.Add.Name = "Resource"
            start = ResourceRows(0)
            endr = ResourceRows(1)
            Resource weekending, start, endr, lastPivotRow, lastPivotColumn, cols(2), lastcolumnNumber + 1, cols(0), cols(3), cols(5), costcenter2()

        End If
        
    Application.DisplayAlerts = True
    
    
' ------------------------------------------------CREATE FOLDER IN DOCUMENTS (if not already created) AND SAVE FILE--------------------------------------------------------------------------
    ' @userName - computer username
    ' @weekendingWithPeriods - replace @weekending value slashes with period (for file path purposes)
    ' @sFolderPath - to hold path for folder
    ' @fdObj - Object variable for holding file system object
    Dim userName As String
    Dim weekendingWithPeriods As String
    Dim sFolderPath As String
    Dim fdObj As Object
    
    ' Capture computer username
    userName = Environ("username")
    weekendingWithPeriods = Replace(weekending, "/", " ")
    
    ' Set folder path to look for/create folder
    sFolderPath = "C:\Users\" & userName & "\Documents\ALL AGENCIES - Weekly Payroll"
    Application.ScreenUpdating = False
    Set fdObj = CreateObject("Scripting.FileSystemObject")
    
    ' Check if folder exists, if not create, then execute save command
    If fdObj.FolderExists(sFolderPath) Then
    Else
        fdObj.CreateFolder (sFolderPath)
    End If
    Application.ScreenUpdating = True

    ' Save final analysis as an .xlsx in folder
    ActiveWorkbook.SaveAs FileName:="C:\Users\" & userName & "\Documents\ALL AGENCIES - Weekly Payroll\All Agencies-WE " & weekendingWithPeriods, FileFormat:=51
    
End Sub
    
Private Sub ACS(weekending As String, startRow As Integer, endRow As Integer, _
                lastPivotRow As Integer, lastPivotColumn As String, STcol As Integer, _
                OTcol As Integer, DTcol As Integer, SICKcol As Integer, vacayCol As Integer, ByRef costCenter() As String)

    'ACS-SETUP
    ACS_Setup_Part1 weekending
    ACS_Setup_Part2

    ' Declare variables
    ' @ACS_total - total number of ACS employees
    ' @ACS_employees() - ACS employee names
    ' @ACS_emp_IDs() - ACS employee ID#s
    ' @ACS_tier() - Tier of each ACS employee
    ' @ACS_remarks() - ACS Employee remarks
    Dim ACS_total As Integer
    Dim ACS_employees() As String
    Dim ACS_emp_IDs() As String
    Dim ACS_tier() As String
    Dim ACS_remarks() As String
    
    ReDim Preserve ACS_remarks(0)
    ReDim Preserve ACS_employees(0)
    ReDim Preserve ACS_emp_IDs(0)
    ReDim Preserve ACS_tier(0)
    
    Sheets("Export File").Activate
    
    ' Initialize first employee from first line
    ACS_total = 1
    ACS_employees(0) = Range("A2").Value    ' name
    ACS_tier(0) = Range("I2").Value         ' ACS Staffing tier
    ACS_emp_IDs(0) = Range("B2").Value      ' Emp ID#
    
    ' Deduce remarks based off Cost center 2
    For i = 0 To 7
        If Range("H2").Value = costCenter(i) Then
            If i = 2 Or i = 0 Then  'Billing or Accounting Cost Center
                ACS_remarks(0) = "Office-B"
            ElseIf i = 4 Then       'Customer Service
                ACS_remarks(0) = "Office-CS"
            ElseIf i = 5 Then       'Dispatch
                ACS_remarks(0) = "Office-D"
            ElseIf i = 7 Then       'yard Office = Safety
                ACS_remarks(0) = "Office-S"
            ElseIf i = 3 Then       'Billing Write up Department
                ACS_remarks(0) = "Office-WD"
            Else
                ACS_remarks(0) = "Office"
            End If
            Exit For
        Else
            ACS_remarks(0) = "Warehouse"
        End If
    Next i
    
    For i = 3 To endRow
        If Range("A" & i).Value <> Range("A" & i - 1).Value Then  'New employee (different from previous)
                    
            'Resize arrays
            ReDim Preserve ACS_employees(ACS_total)
            ReDim Preserve ACS_emp_IDs(ACS_total)
            ReDim Preserve ACS_tier(ACS_total)
            ReDim Preserve ACS_remarks(ACS_total)
            
            For m = 0 To 7
                If Range("H" & i).Value = costCenter(m) Then
                    If m = 2 Or m = 0 Then  'Billing or Accounting Cost Center
                        ACS_remarks(ACS_total) = "Office-B"
                    ElseIf m = 4 Then       'Customer Service
                        ACS_remarks(ACS_total) = "Office-CS"
                    ElseIf m = 5 Then       'Dispatch
                        ACS_remarks(ACS_total) = "Office-D"
                    ElseIf m = 7 Then       'yard Office means Safety
                        ACS_remarks(ACS_total) = "Office-S"
                    ElseIf m = 3 Then       'Billing Write up Department
                        ACS_remarks(ACS_total) = "Office-WD"
                    Else
                        ACS_remarks(ACS_total) = "Office"
                    End If
                    Exit For
                Else
                    ACS_remarks(ACS_total) = "Warehouse"
                End If
            Next m
            
            ACS_employees(ACS_total) = Range("A" & i).Value     ' Name
            ACS_tier(ACS_total) = Range("I" & i).Value          ' Tier
            ACS_emp_IDs(ACS_total) = Range("B" & i).Value       ' ID#
            ACS_total = ACS_total + 1                           ' Increment total by 1
        
        End If
    Next i
    
    
    ' Enter values on ACS Staffing sheet
    Worksheets("ACS Staffing").Activate
    
    Dim ACS_tiers(3) As String
    ACS_tiers(0) = "Tier 1-G Labor"
    ACS_tiers(1) = "Tier 1-Clerical"
    ACS_tiers(2) = "Tier 2-G Labor"
    ACS_tiers(3) = "Tier 2-Clerical"
    
    ' @rowCount() - array of start and end row# for each Tier on new sheet
    ' rowCount(x,1) will be incremented as employees are added to sheet
    Dim rowCount(3, 1) As Integer   'rowcount (start,end)
    rowCount(0, 0) = 10     ' start Tier 1-G Labor
    rowCount(0, 1) = 10     ' end
    rowCount(1, 0) = 67     ' start Tier1-Clerical
    rowCount(1, 1) = 67     ' end
    rowCount(2, 0) = 95     ' start Tier 2-G Labor
    rowCount(2, 1) = 95     ' end
    rowCount(3, 0) = 132    ' start Tier2-Clerical
    rowCount(3, 1) = 132    ' end
    
    ' Put the names on the ACS sheet based off the second index (tier)
    ' A6   - Tier 1-G Labor     - names start on A10    array index = 0
    ' A67  - Tier 1-G Clerical  - names start on A67    array index = 1
    ' A91  - Tier 2-G Labor     - names start on A95    array index = 2
    ' A128 - TIer 2-G Clerical  - names start on A132   array index = 3
    
    For i = 0 To ACS_total - 1
        For j = 0 To 3
            
            If ACS_tier(i) = ACS_tiers(j) Then
                ' Place employee name, ID#, and remarks under the appropriate tier
                Range("A" & rowCount(j, 1)).Value = ACS_employees(i)    ' name
                Range("B" & rowCount(j, 1)).Value = ACS_emp_IDs(i)      ' ID
                Range("L" & rowCount(j, 1)).Value = ACS_remarks(i)      ' remarks
            
                ' increment counter
                rowCount(j, 1) = rowCount(j, 1) + 1
                Exit For
            End If
    
        Next j
    Next i
    
    ' @kvalues - holds the row# for the placement of multipliers for each tier
    Dim kvalues(3) As Integer
    kvalues(0) = 1
    kvalues(1) = 58
    kvalues(2) = 86
    kvalues(3) = 123
    
    ' Fill in rates for ACS
    For i = 0 To 3
        
        ' Rate formula
        Range("C" & rowCount(i, 0)).Formula2 = "=INDEX('Export File'!$D$2:$D$" & endRow & ",MATCH(1,($A" & rowCount(i, 0) & "='Export File'!$A$2:$A$" & endRow & ")*(""Regular""='Export File'!$C$2:$C$" & endRow & "),0))"
        Range("C" & rowCount(i, 0)).AutoFill Destination:=Range("C" & rowCount(i, 0) & ":C" & rowCount(i, 1) - 1), Type:=xlFillDefault
    
        ' Populate total to bill formula
        Range("K" & rowCount(i, 0)).Formula2 = "=((D" & rowCount(i, 0) & "*C" & rowCount(i, 0) & ")+(E" & rowCount(i, 0) & "*C" & rowCount(i, 0) & "*1.5)+(F" & rowCount(i, 0) & "*C" & rowCount(i, 0) & "*2))*K$" & kvalues(i)
        Range("K" & rowCount(i, 0)).AutoFill Destination:=Range("K" & rowCount(i, 0) & ":K" & rowCount(i, 1) - 1), Type:=xlFillDefault
        
        ' Populate ST HOURS
        Range("D" & rowCount(i, 0)).Formula2 = "=VLOOKUP($A" & rowCount(i, 0) & ",Pivot!$A$5:$" & lastPivotColumn & "$" & lastPivotRow & "," & STcol & ",FALSE)"
        Range("D" & rowCount(i, 0)).AutoFill Destination:=Range("D" & rowCount(i, 0) & ":D" & rowCount(i, 1) - 1), Type:=xlFillDefault
        
        ' Populate OT HOURS
        Range("E" & rowCount(i, 0)).Formula2 = "=VLOOKUP($A" & rowCount(i, 0) & ",Pivot!$A$5:$" & lastPivotColumn & "$" & lastPivotRow & "," & OTcol & ",FALSE)"
        Range("E" & rowCount(i, 0)).AutoFill Destination:=Range("E" & rowCount(i, 0) & ":E" & rowCount(i, 1) - 1), Type:=xlFillDefault
        
        ' Populate DT HOURS if column exists
        If DTcol <> 55 Then
            Range("F" & rowCount(i, 0)).Formula2 = "=VLOOKUP($A" & rowCount(i, 0) & ",Pivot!$A$5:$" & lastPivotColumn & "$" & lastPivotRow & "," & DTcol & ",FALSE)"
            Range("F" & rowCount(i, 0)).AutoFill Destination:=Range("F" & rowCount(i, 0) & ":F" & rowCount(i, 1) - 1), Type:=xlFillDefault
        End If
        
        ' Populate SICK if column exists
        If SICKcol <> 55 Then
            Range("H" & rowCount(i, 0)).Formula2 = "=VLOOKUP($A" & rowCount(i, 0) & ",Pivot!$A$5:$" & lastPivotColumn & "$" & lastPivotRow & "," & SICKcol & ",FALSE)"
            Range("H" & rowCount(i, 0)).AutoFill Destination:=Range("H" & rowCount(i, 0) & ":H" & rowCount(i, 1) - 1), Type:=xlFillDefault
        End If
        
        ' Populate VACATION if column exists
        If vacayCol <> 55 Then
            Range("G" & rowCount(i, 0)).Formula2 = "=VLOOKUP($A" & rowCount(i, 0) & ",Pivot!$A$5:$" & lastPivotColumn & "$" & lastPivotRow & "," & vacayCol & ",FALSE)"
            Range("G" & rowCount(i, 0)).AutoFill Destination:=Range("G" & rowCount(i, 0) & ":G" & rowCount(i, 1) - 1), Type:=xlFillDefault
        End If
        
        Range("C" & rowCount(i, 0) & ": K" & rowCount(i, 1)).NumberFormat = "0.00"

        calculateTotals rowCount(i, 0), rowCount(i, 1)
        Add_border_to_single_table rowCount(i, 0), rowCount(i, 1)
        
    Next i
    
    Sheets("ACS Staffing").Activate
    Worksheets("ACS Staffing").columns("A:L").AutoFit
    
    ' Create new sheet that will contain only values and necessary formulas
    Sheets.Add.Name = "ACS FINAL"
    
    ' Copy values and formatting to another sheet
    Sheets("ACS Staffing").Range("A:J").Copy
    Sheets("ACS FINAL").Range("A:J").PasteSpecial Paste:=xlPasteValuesAndNumberFormats
    Sheets("ACS Staffing").Range("A:J").Copy
    Sheets("ACS FINAL").Range("A:J").PasteSpecial Paste:=xlPasteFormats
    
    ' Copy and paste totals formulas and formatting for each tier
    For i = 0 To 3
    Sheets("ACS Staffing").Range(rowCount(i, 1) & ":" & rowCount(i, 1)).Copy Destination:=Worksheets("ACS FINAL").Range(rowCount(i, 1) & ":" & rowCount(i, 1))
    Next i
    
    ' Copy and paste formulas
    Sheets("ACS Staffing").Range("K:AC").Copy Destination:=Worksheets("ACS FINAL").Range("K:AC")
    
    ' Delete original ACS sheet
    Worksheets("ACS Staffing").Delete
    Sheets("ACS FINAL").Activate
    
    ' @subjectLine - subject line of email to be sent to ACS Staffing
    ' @FileName - file name of file we will attach to email (not saved on computer)
    ' @sendTo - email recipients containing ACS Staffing personnel
    '         - (edit this variable to remove or add recipients) - based off Suzette's instructions
    Dim subjectLine As String, FileName As String, sendTo As String
    
    subjectLine = "ACS Staffing Agency WE: " & weekending
    FileName = "ACS Agency Weekly Hours"
    sendTo = "lgarcia@acsstaffinginc.com;eduarte@acsstaffinginc.com;mrivera@acsstaffinginc.com"
    
    ' Call procedure to creat email draft
    create_email FileName, subjectLine, weekending, sendTo
    
End Sub
  
'
' VBA Procedure that attaches the appropriate agency's WORKSHEET from master file WORKBOOK to an email with specified recipients
' DOES NOT SEND EMAIL - just displays the draft
'
' @partners = default value of 0, but = 1 if called from Partners procedure (there are two worksheets to send to Partners Personnel rather than one)
'

Private Sub create_email(agencyFileName As String, subjectLine As String, weekending As String, sendTo As String, Optional partners As Integer = 0)
    
    ' BA code: send current worksheet as attachment from Excel
    ' For Tips see: http://www.rondebruin.nl/win/winmail/Outlook/tips.htm
    Dim FileExtStr As String
    Dim FileFormatNum As Long
    Dim Sourcewb As Workbook
    Dim Destwb As Workbook
    Dim Destwb2 As Workbook
    Dim TempFilePath As String
    Dim TempFileName As String
    Dim OutApp As Object
    Dim OutMail As Object
    
    With Application
        .ScreenUpdating = False
        .EnableEvents = False
    End With

    Set Sourcewb = ActiveWorkbook
    
    ' Copy the ActiveSheet to a new workbook
    ActiveSheet.Copy
    Set Destwb = ActiveWorkbook
    
    ' @WEwithDashes - weekending value with dash(-) as delimeter
    ' Rename new sheet on new workbook to WEwithDashes
    Dim WEwithDashes As String
    WEwithDashes = Replace(weekending, "/", "-")
    Sheets(1).Name = WEwithDashes
    
    ' !!Only for partners!!
    ' Copy additional partners worksheet to a seperate new workbook
    If partners <> 0 Then
        Sourcewb.Activate
        Sheets("Partners T3 FINAL").Copy
        Set Destwb2 = ActiveWorkbook
        Sheets(1).Name = WEwithDashes
    End If
    
    'Determine the Excel version and file extension/format
'    With Destwb
'        If Val(Application.Version) < 12 Then
'            'You use Excel 97-2003
'            FileExtStr = ".xls": FileFormatNum = -4143
'        Else
'            'You use Excel 2007-2016
'            Select Case Sourcewb.FileFormat
'            Case 51: FileExtStr = ".xlsx": FileFormatNum = 51
'            Case 52:
'                If .HasVBProject Then
'                    FileExtStr = ".xlsm": FileFormatNum = 52
'                Else
'                    FileExtStr = ".xlsx": FileFormatNum = 51
'                End If
'            Case 56: FileExtStr = ".xls": FileFormatNum = 56
'            Case Else: FileExtStr = ".xlsb": FileFormatNum = 50
'            End Select
'        End If
'    End With
    
    
    ' Set the Excel File Extension and Format number
    FileExtStr = ".xlsx"
    FileFormatNum = 51

    'Save the new workbook>Mail it>Delete it
    TempFilePath = Environ$("temp") & "\"
    TempFileName = agencyFileName

    Set OutApp = CreateObject("Outlook.Application")
    Set OutMail = OutApp.CreateItem(0)
    
    ' This IF/ELSE block is where changes to CC and BCC recipients take place
    If partners = 0 Then
        With Destwb
            .SaveAs TempFilePath & TempFileName & FileExtStr, FileFormat:=FileFormatNum
            On Error Resume Next
                With OutMail
                    .To = sendTo
                    .CC = "dscheller@uwc-net.com;smustafa@uwc-net.com;snorris@uwc-net.com;eelms@uwc-net.com;sdeleon@uwc-net.com"
                    .BCC = "shamaram@uwc-net.com"
                    .Subject = subjectLine
                    .Body = "Good Afternoon," & Chr(10) & Chr(10) & "Please find attached hours for WE: " & weekending & "." & _
                            Chr(10) & Chr(10) & "Thank you,"
                    .Attachments.Add Destwb.FullName
                    'You can add other files also like this
                    '.Attachments.Add ("C:\test.txt")
                    .DISPLAY
                End With
            On Error GoTo 0
            .Close savechanges:=False
        End With

    Else    ' Partners we need to add two workbooks
        With Destwb
            .SaveAs TempFilePath & TempFileName & FileExtStr, FileFormat:=FileFormatNum
            On Error Resume Next
            With Destwb2
                .SaveAs TempFilePath & "AES (Partners Personnel) 3.xlsx", FileFormat:=FileFormatNum
                On Error Resume Next
                With OutMail
                    .To = sendTo
                    .CC = "dscheller@uwc-net.com;smustafa@uwc-net.com;snorris@uwc-net.com;eelms@uwc-net.com;sdeleon@uwc-net.com"
                    .BCC = "shamaram@uwc-net.com"
                    .Subject = subjectLine
                    .Body = "Good Afternoon," & Chr(10) & Chr(10) & "Please find attached hours for WE: " & weekending & "." & _
                            Chr(10) & Chr(10) & "Thank you,"
                    .Attachments.Add Destwb.FullName
                    .Attachments.Add Destwb2.FullName
                    'You can add other files also like this
                    '.Attachments.Add ("C:\test.txt")
                    .DISPLAY
                End With
                On Error GoTo 0
                .Close savechanges:=False
            End With
            On Error GoTo 0
            .Close savechanges:=False
        End With

        'delete the temporary files
        Kill TempFilePath & TempFileName & FileExtStr
        Kill TempFilePath & "AES (Partners Personnel) 3.xlsx"
    End If


    Set OutMail = Nothing
    Set OutApp = Nothing

    With Application
        .ScreenUpdating = True
        .EnableEvents = True
    End With

End Sub

'-----------------------------------------------------------------------END ACS----BEGIN JAM------------------------------------------------------------------------------
Private Sub JAM(weekending As String, startRow As Integer, endRow As Integer, lastPivotRow As Integer, _
                lastPivotColumn As String, STcol As Integer, OTcol As Integer, DTcol As Integer, SICK As _
                Integer, vacayCol As Integer, costcenter2() As String)
    JAM_setup weekending
    
    '''
    'Get JAM names, empIds, , cost center 2 - JAM has no tiers
    '''
    '''
    Dim JAM_total As Integer
    Dim JAM_employees() As String
    Dim JAM_emp_IDs() As String
    Dim JAM_remarks() As String
    
    ReDim Preserve JAM_employees(0)
    ReDim Preserve JAM_emp_IDs(0)
    ReDim Preserve JAM_remarks(0)
    
    Sheets("Export File").Activate
    
    'Initialize first employee from first line
    JAM_total = 1
    JAM_employees(0) = Range("A" & startRow).Value    'name  JAMrows(0,0) is the first instance of JAM
    JAM_emp_IDs(0) = Range("B" & startRow).Value    'Emp ID#
    
    For i = 0 To 7
        If Range("H" & startRow).Value = costcenter2(i) Then
            If i = 2 Or i = 0 Then 'Billing or Accounting Cost Center
                JAM_remarks(0) = "Office-B"
            ElseIf i = 4 Then 'Customer Service
                JAM_remarks(0) = "Office-CS"
            ElseIf i = 5 Then 'Dispatch
                JAM_remarks(0) = "Office-D"
            ElseIf i = 7 Then   'yard Office means Safety
                JAM_remarks(0) = "Office-S"
            ElseIf i = 3 Then   'Billing Write up Department\
                JAM_remarks(0) = "Office-WD"
            Else
                JAM_remarks(0) = "Office"
            End If
            Exit For
        Else
            JAM_remarks(0) = "Warehouse"
        End If
        
    Next i
    
    For i = startRow + 1 To endRow
        
        If Range("A" & i).Value <> Range("A" & i - 1).Value Then  'new employee (different from previous)
        
            ReDim Preserve JAM_employees(JAM_total)
            ReDim Preserve JAM_emp_IDs(JAM_total)
            ReDim Preserve JAM_remarks(JAM_total)
            
            'Determine if remark is Office or Warehouse
            For m = 0 To 7
                If Range("H" & i).Value = costcenter2(m) Then
                    If m = 2 Or m = 0 Then 'Billing or Accounting Cost Center
                        JAM_remarks(JAM_total) = "Office-B"
                    ElseIf m = 4 Then 'Customer Service
                        JAM_remarks(JAM_total) = "Office-CS"
                    ElseIf m = 5 Then 'Dispatch
                        JAM_remarks(JAM_total) = "Office-D"
                    ElseIf m = 7 Then   'yard Office means Safety
                        JAM_remarks(JAM_total) = "Office-S"
                    ElseIf m = 3 Then   'Billing Write up Department
                        JAM_remarks(JAM_total) = "Office-WD"
                    Else
                        JAM_remarks(JAM_total) = "Office"
                    End If
                    Exit For
                Else
                    JAM_remarks(JAM_total) = "Warehouse"
                End If
            Next m
            
            'gather the rest
            JAM_employees(JAM_total) = Range("A" & i).Value      'name
            JAM_emp_IDs(JAM_total) = Range("B" & i).Value      'ID
            JAM_total = JAM_total + 1   'increment by 1
        End If
        
    Next i
    
    'Enter values on JAM Staffing Sheet
    Sheets("JAM Staffing").Activate
    
    Dim startJam As Integer, endJam As Integer
    startJam = 9
    endJam = 9
    
    For i = 0 To JAM_total - 1
        Range("A" & endJam).Value = JAM_employees(i)
        Range("B" & endJam).Value = JAM_emp_IDs(i)
        Range("L" & endJam).Value = JAM_remarks(i)
        endJam = endJam + 1
    Next i
   
   '
   ' Populate formulas; autofill if there is more than one employee
   '
   
   If endJam - 1 = startJam Then 'if there is only one employee
        Range("K9").Formula2 = "=((D9*C9)+(E9*C9*1.5)+(F9*C9*2)+(I9*C9))*$L$1"
        Range("C9").Formula2 = "=INDEX('Export File'!$D$2:$D$" & endRow & ",MATCH(1,($A9='Export File'!$A$2:$A$" & endRow & ")*(""Regular""='Export File'!$C$2:$C$" & endRow & "),0))"
        Range("D9").Formula2 = "=VLOOKUP($A9,Pivot!$A$5:$" & lastPivotColumn & "$" & lastPivotRow & "," & STcol & ",FALSE)"
        Range("E9").Formula2 = "=VLOOKUP($A9,Pivot!$A$5:$" & lastPivotColumn & "$" & lastPivotRow & "," & OTcol & ",FALSE)"
        If DTcol <> 55 Then
            Range("F9").Formula2 = "=VLOOKUP($A9,Pivot!$A$5:$" & lastPivotColumn & "$" & lastPivotRow & "," & DTcol & ",FALSE)"
        End If
        If SICK <> 55 Then
            Range("H9").Formula2 = "=VLOOKUP($A9,Pivot!$A$5:$" & lastPivotColumn & "$" & lastPivotRow & "," & SICK & ",FALSE)"
        End If
        If vacayCol <> 55 Then
             Range("G9").Formula2 = "=VLOOKUP($A9,Pivot!$A$5:$" & lastPivotColumn & "$" & lastPivotRow & "," & vacayCol & ",FALSE)"
        End If
    Else
   
         'Total to bill formula
         Range("K9").Formula2 = "=((D9*C9)+(E9*C9*1.5)+(F9*C9*2)+(I9*C9))*$L$1"
         Range("K9").AutoFill Destination:=Range("K9:K" & endJam - 1), Type:=xlFillDefault
        
         'Rate formula
         Range("C9").Formula2 = "=INDEX('Export File'!$D$2:$D$" & endRow & ",MATCH(1,($A9='Export File'!$A$2:$A$" & endRow & ")*(""Regular""='Export File'!$C$2:$C$" & endRow & "),0))"
         Range("C9").AutoFill Destination:=Range("C9:C" & endJam - 1), Type:=xlFillDefault
         
         'Populate ST HOURS
         Range("D9").Formula2 = "=VLOOKUP($A9,Pivot!$A$5:$" & lastPivotColumn & "$" & lastPivotRow & "," & STcol & ",FALSE)"
         Range("D9").AutoFill Destination:=Range("D9:D" & endJam - 1), Type:=xlFillDefault
         
         'Populate OT HOURS
         Range("E9").Formula2 = "=VLOOKUP($A9,Pivot!$A$5:$" & lastPivotColumn & "$" & lastPivotRow & "," & OTcol & ",FALSE)"
         Range("E9").AutoFill Destination:=Range("E9:E" & endJam - 1), Type:=xlFillDefault
         
         If DTcol <> 55 Then
             'Populate DT HOURS
             Range("F9").Formula2 = "=VLOOKUP($A9,Pivot!$A$5:$" & lastPivotColumn & "$" & lastPivotRow & "," & DTcol & ",FALSE)"
             Range("F9").AutoFill Destination:=Range("F9:F" & endJam - 1), Type:=xlFillDefault
         End If
         
         If SICK <> 55 Then
             'Populate SICK
             Range("H9").Formula2 = "=VLOOKUP($A9,Pivot!$A$5:$" & lastPivotColumn & "$" & lastPivotRow & "," & SICK & ",FALSE)"
             Range("H9").AutoFill Destination:=Range("H9:H" & endJam - 1), Type:=xlFillDefault
         End If
         
         If vacayCol <> 55 Then
             'Populate VACAY HOURS
             Range("G9").Formula2 = "=VLOOKUP($A9,Pivot!$A$5:$" & lastPivotColumn & "$" & lastPivotRow & "," & vacayCol & ",FALSE)"
             Range("G9").AutoFill Destination:=Range("G9:G" & endJam - 1), Type:=xlFillDefault
         End If
    End If
    
    Range("C9:L" & endJam).NumberFormat = "0.00"
   
   
    'Calculate TOTALS
    calculateTotals startJam, endJam
    'Add Borders
    Add_border_to_single_table startJam, endJam
    
    
    'Copy values and formatting to another sheet
    
    Sheets.Add.Name = "JAM FINAL"
    
    Sheets("JAM Staffing").Range("A:J").Copy
    Sheets("JAM FINAL").Range("A:J").PasteSpecial Paste:=xlPasteValuesAndNumberFormats

    Sheets("JAM Staffing").Range("A:J").Copy
    Sheets("JAM FINAL").Range("A:J").PasteSpecial Paste:=xlPasteFormats
    
    'Copy total formulas at the botttom
    Sheets("JAM Staffing").Range(endJam & ":" & endJam).Copy Destination:=Worksheets("JAM FINAL").Range(endJam & ":" & endJam)
    Sheets("JAM Staffing").Range("K:AC").Copy Destination:=Worksheets("JAM FINAL").Range("K:AC")
    
    Worksheets("JAM Staffing").Delete       'delete the one with all the formulas
    
    '----------------------------------------------------------------------END-JAM--------------------------------------------------------------------------

    Sheets("JAM FINAL").Activate
    
    'Hide columns
    columns("F:G").Hidden = True
    
    Dim subjectLine As String, FileName As String, sendTo As String
    subjectLine = "JAM Staffing-WE: " & weekending
    FileName = "JAM Staffing"
    sendTo = "jennifer@onlinetruckinginc.com;dalia@onlinetruckinginc.com;jaime@onlinetruckinginc.com"
    create_email FileName, subjectLine, weekending, sendTo
    
End Sub
Private Sub OneWay(weekending As String, startr As Integer, endr As Integer, lastPivotRow As Integer, _
                    lastPivotColumn As String, STcol As Integer, OTcol As Integer, DTcol As Integer, _
                    SICK As Integer, vacayCol As Integer, costcenter2() As String)
 
    OneWay_Setup (weekending)
    oneway_headerBorders
 
    '''
    'Get oneway names, empIds
    '''
    '''
    Dim OneWay_total As Integer
    Dim OneWay_employees() As String
    Dim OneWay_emp_IDs() As String
    Dim OneWay_remarks() As String
    
    ReDim Preserve OneWay_employees(0)
    ReDim Preserve OneWay_emp_IDs(0)
    ReDim Preserve OneWay_remarks(0)
    
    Sheets("Export File").Activate

    'Initialize first employee from first line
    OneWay_total = 1
    OneWay_employees(0) = Range("A" & startr).Value    'name  startr is the first instance of oneway
    OneWay_emp_IDs(0) = Range("B" & startr).Value    'Emp ID#
    
    'remarks
    For m = 0 To 7
        If Range("H" & startr).Value = costcenter2(m) Then
            If m = 2 Or m = 0 Then 'Billing or Accounting Cost Center
                OneWay_remarks(0) = "Office-B"
            ElseIf m = 4 Then 'Customer Service
                OneWay_remarks(0) = "Office-CS"
            ElseIf m = 5 Then 'Dispatch
                OneWay_remarks(0) = "Office-D"
            ElseIf m = 7 Then   'yard Office means Safety
                OneWay_remarks(0) = "Office-S"
            ElseIf m = 3 Then   'Billing Write up Department\
                OneWay_remarks(0) = "Office-WD"
            Else
                OneWay_remarks(0) = "Office"
            End If
            Exit For
        Else
            OneWay_remarks(0) = "Warehouse"
        End If
    Next m
    
    For i = startr + 1 To endr
        If Range("A" & i).Value <> Range("A" & i - 1).Value Then  'new employee (different from previous)

            ReDim Preserve OneWay_employees(OneWay_total)
            ReDim Preserve OneWay_emp_IDs(OneWay_total)
            ReDim Preserve OneWay_remarks(OneWay_total)
            
            'remarks
            For m = 0 To 7
                If Range("H" & i).Value = costcenter2(m) Then
                    If m = 2 Or m = 0 Then 'Billing or Accounting Cost Center
                        OneWay_remarks(OneWay_total) = "Office-B"
                    ElseIf m = 4 Then 'Customer Service
                        OneWay_remarks(OneWay_total) = "Office-CS"
                    ElseIf m = 5 Then 'Dispatch
                        OneWay_remarks(OneWay_total) = "Office-D"
                    ElseIf m = 7 Then   'yard Office means Safety
                        OneWay_remarks(OneWay_total) = "Office-S"
                    ElseIf m = 3 Then   'Billing Write up Department\
                        OneWay_remarks(OneWay_total) = "Office-WD"
                    Else
                        OneWay_remarks(OneWay_total) = "Office"
                    End If
                    Exit For
                Else
                    OneWay_remarks(OneWay_total) = "Warehouse"
                End If
            Next m
            
            OneWay_employees(OneWay_total) = Range("A" & i).Value      'name
            OneWay_emp_IDs(OneWay_total) = Range("B" & i).Value      'ID
            OneWay_total = OneWay_total + 1   'increment by 1
        
        End If
    Next i

    'Enter values on oneway Staffing Sheet
    Sheets("OneWay Staffing").Activate

    Dim startOneWay As Integer, endOneWay As Integer
    startOneWay = 9
    endOneWay = 9

    For i = 0 To OneWay_total - 1
        Range("A" & endOneWay).Value = OneWay_employees(i)
        Range("B" & endOneWay).Value = OneWay_emp_IDs(i)
        Range("L" & endOneWay).Value = OneWay_remarks(i)
        endOneWay = endOneWay + 1
    Next i
    
    If endOneWay - 1 = startOneWay Then 'if there is only one employee
        Range("K9").Formula2 = "=((D9*C9)+(E9*C9*1.5)+(F9*C9*2)+(I9*C9))*$L$1"
        Range("C9").Formula2 = "=INDEX('Export File'!$D$2:$D$" & endr & ",MATCH(1,($A9='Export File'!$A$2:$A$" & endr & ")*(""Regular""='Export File'!$C$2:$C$" & endr & "),0))"
        Range("D9").Formula2 = "=VLOOKUP($A9,Pivot!$A$5:$" & lastPivotColumn & "$" & lastPivotRow & "," & STcol & ",FALSE)"
        Range("E9").Formula2 = "=VLOOKUP($A9,Pivot!$A$5:$" & lastPivotColumn & "$" & lastPivotRow & "," & OTcol & ",FALSE)"
        If DTcol <> 55 Then
            Range("F9").Formula2 = "=VLOOKUP($A9,Pivot!$A$5:$" & lastPivotColumn & "$" & lastPivotRow & "," & DTcol & ",FALSE)"
        End If
        If SICK <> 55 Then
            Range("H9").Formula2 = "=VLOOKUP($A9,Pivot!$A$5:$" & lastPivotColumn & "$" & lastPivotRow & "," & SICK & ",FALSE)"
        End If
        If vacayCol <> 55 Then
             Range("G9").Formula2 = "=VLOOKUP($A9,Pivot!$A$5:$" & lastPivotColumn & "$" & lastPivotRow & "," & vacayCol & ",FALSE)"
        End If
    Else
    
        'Total to bill formula
        Range("K9").Formula2 = "=((D9*C9)+(E9*C9*1.5)+(F9*C9*2)+(I9*C9))*$L$1"
        Range("K9").AutoFill Destination:=Range("K9:K" & endOneWay - 1), Type:=xlFillDefault
    
        'Rate formula
        Range("C9").Formula2 = "=INDEX('Export File'!$D$2:$D$" & endr & ",MATCH(1,($A9='Export File'!$A$2:$A$" & endr & ")*(""Regular""='Export File'!$C$2:$C$" & endr & "),0))"
        Range("C9").AutoFill Destination:=Range("C9:C" & endOneWay - 1), Type:=xlFillDefault
    
        'Populate ST HOURS
        Range("D9").Formula2 = "=VLOOKUP($A9,Pivot!$A$5:$" & lastPivotColumn & "$" & lastPivotRow & "," & STcol & ",FALSE)"
        Range("D9").AutoFill Destination:=Range("D9:D" & endOneWay - 1), Type:=xlFillDefault
    
        'Populate OT HOURS
        Range("E9").Formula2 = "=VLOOKUP($A9,Pivot!$A$5:$" & lastPivotColumn & "$" & lastPivotRow & "," & OTcol & ",FALSE)"
        Range("E9").AutoFill Destination:=Range("E9:E" & endOneWay - 1), Type:=xlFillDefault
    
        If DTcol <> 55 Then
            'Populate DT HOURS
            Range("F9").Formula2 = "=VLOOKUP($A9,Pivot!$A$5:$" & lastPivotColumn & "$" & lastPivotRow & "," & DTcol & ",FALSE)"
            Range("F9").AutoFill Destination:=Range("F9:F" & endOneWay - 1), Type:=xlFillDefault
        End If
        
        If SICK <> 55 Then
            'Populate SICK
            Range("H9").Formula2 = "=VLOOKUP($A9,Pivot!$A$5:$" & lastPivotColumn & "$" & lastPivotRow & "," & SICK & ",FALSE)"
            Range("H9").AutoFill Destination:=Range("H9:H" & endOneWay - 1), Type:=xlFillDefault
        End If
        
        If vacayCol <> 55 Then
            'Populate SICK
            Range("G9").Formula2 = "=VLOOKUP($A9,Pivot!$A$5:$" & lastPivotColumn & "$" & lastPivotRow & "," & vacayCol & ",FALSE)"
            Range("G9").AutoFill Destination:=Range("G9:G" & endOneWay - 1), Type:=xlFillDefault
        End If
    End If
    
    Range("C9:K" & endOneWay).NumberFormat = "0.00"

    'Calculate TOTALS
    calculateTotals startOneWay, endOneWay
    'Add Borders
    Add_border_to_single_table startOneWay, endOneWay
    
    'Copy values and formatting to another sheet
    
    Sheets.Add.Name = "OneWay FINAL"
    
    Sheets("OneWay Staffing").Range("A:J").Copy
    Sheets("OneWay FINAL").Range("A:J").PasteSpecial Paste:=xlPasteValuesAndNumberFormats

    Sheets("OneWay Staffing").Range("A:J").Copy
    Sheets("OneWay FINAL").Range("A:J").PasteSpecial Paste:=xlPasteFormats
    
    'Copy bottom totals formulas
    Sheets("OneWay Staffing").Range(endOneWay & ":" & endOneWay).Copy Destination:=Worksheets("OneWay FINAL").Range(endOneWay & ":" & endOneWay)
    
    Sheets("OneWay Staffing").Range("K:AC").Copy Destination:=Worksheets("OneWay FINAL").Range("K:AC")
    Worksheets("OneWay Staffing").Delete       'delete the one with all the formulas
    
    Sheets("OneWay FINAL").Activate
    
    'hide columns :/
    columns("F:G").Hidden = True
    columns("I").Hidden = True
    
    Dim subjectLine As String, FileName As String, sendTo As String
    subjectLine = "Oneway Staffing WE: " & weekending
    FileName = "Oneway Staffing Weekly Hours"
    sendTo = "yaniras@onewaystaffing.net;susanc@onewaystaffing.net;jperez@alternacs.com"
    create_email FileName, subjectLine, weekending, sendTo
    
End Sub

Private Sub partners(weekending As String, startr As Integer, endr As Integer, lastPivotRow As Integer, _
                        lastPivotColumn As String, STcol As Integer, OTcol As Integer, DTcol As Integer, _
                        SICK As Integer, vacayCol As Integer, holidayCol As Integer, costCenter() As String)
    Sheets("Partners Tier 1").Activate
    Partners_Setup_PT1 weekending, 1
    Partners_setup_pt2
    
    Sheets("Partners Tier 3").Activate
    Partners_Setup_PT1 weekending, 3
    Partners_setup_pt2
    
    
      '''
    '''
    'Get ACS names, empIds, and rates
    '''
    '''
    'declare arrays to store name, tier, and employee ID - handle rates separately using a formula
    Dim Partners_total As Integer
    Dim Partners_employees() As String
    Dim Partners_emp_IDs() As String
    Dim Partners_tier() As String
    Dim Partners_remarks() As String
    
    ReDim Preserve Partners_employees(0)
    ReDim Preserve Partners_emp_IDs(0)
    ReDim Preserve Partners_tier(0)
    ReDim Preserve Partners_remarks(0)
    
    Sheets("Export File").Activate
    
    'Initialize first employee from first line
    Partners_total = 1
    Partners_employees(0) = Range("A" & startr).Value     'name
    Partners_tier(0) = Range("I" & startr).Value     'ACS Staffing tier
    Partners_emp_IDs(0) = Range("B" & startr).Value     'Emp ID#
    
    'intialize first remark
    For m = 0 To 7
        If Range("H" & startr).Value = costCenter(m) Then
            If m = 2 Or m = 0 Then 'Billing or Accounting Cost Center
                Partners_remarks(0) = "Office-B"
            ElseIf m = 4 Then 'Customer Service
                Partners_remarks(0) = "Office-CS"
            ElseIf m = 5 Then 'Dispatch
                Partners_remarks(0) = "Office-D"
            ElseIf m = 7 Then   'yard Office means Safety
                Partners_remarks(0) = "Office-S"
            ElseIf m = 3 Then   'Billing Write up Department
                Partners_remarks(0) = "Office-WD"
            Else
                Partners_remarks(0) = "Office"
            End If
            Exit For
        Else
            Partners_remarks(0) = "Warehouse"
        End If
    Next m

    
    For i = startr + 1 To endr
        If Range("A" & i).Value <> Range("A" & i - 1).Value Then  'new employee (different from previous)
        
            ReDim Preserve Partners_employees(Partners_total)
            ReDim Preserve Partners_emp_IDs(Partners_total)
            ReDim Preserve Partners_tier(Partners_total)
            ReDim Preserve Partners_remarks(Partners_total)
            
            'remark
            For m = 0 To 7
                If Range("H" & i).Value = costCenter(m) Then
                    If m = 2 Or m = 0 Then 'Billing or Accounting Cost Center
                        Partners_remarks(Partners_total) = "Office-B"
                    ElseIf m = 4 Then 'Customer Service
                        Partners_remarks(Partners_total) = "Office-CS"
                    ElseIf m = 5 Then 'Dispatch
                        Partners_remarks(Partners_total) = "Office-D"
                    ElseIf m = 7 Then   'yard Office means Safety
                        Partners_remarks(Partners_total) = "Office-S"
                    ElseIf m = 3 Then   'Billing Write up Department
                        Partners_remarks(Partners_total) = "Office-WD"
                    Else
                        Partners_remarks(Partners_total) = "Office"
                    End If
                    Exit For
                Else
                    Partners_remarks(Partners_total) = "Warehouse"
                End If
            Next m
            
            Partners_employees(Partners_total) = Range("A" & i).Value      'name
            Partners_tier(Partners_total) = Range("I" & i).Value      'tier
            Partners_emp_IDs(Partners_total) = Range("B" & i).Value      'ID
            Partners_total = Partners_total + 1   'increment by 1
            
        End If
    Next i


    Dim Partners_tiers(1) As String
    Partners_tiers(0) = "Tier 1"
    Partners_tiers(1) = "Tier 3"
    
    Dim tier1_count As Integer
    Dim tier3_count As Integer
    Dim tierRows(1, 1) As Integer  ' 0,0 & 0,1 - tier 1 and 1,0 * 1,1 for tier 3
    tier1_count = 0
    tier3_count = 0
    
    tierRows(0, 0) = 8  'tier 1 - start
    tierRows(0, 1) = 8  'tier 1 - end
    tierRows(1, 0) = 8  'tier 3 - start
    tierRows(1, 1) = 8  'tier 3 - end
    
    For i = 0 To Partners_total - 1 'iterate through the array
        Dim firstIndex As Integer
        If Partners_tier(i) = "Tier 1" Then
            Sheets("Partners Tier 1").Activate
            firstIndex = 0
            
            If Left(Partners_remarks(i), 6) = "Office" Then
                'REG RATE
                Range("M" & tierRows(0, 1)).Formula2 = "=$H" & tierRows(0, 1) & "*1.3"
                'OT RATE
                Range("N" & tierRows(0, 1)).Formula2 = "=$I" & tierRows(0, 1) & "*1.285"
                'DT RATE
                Range("O" & tierRows(0, 1)).Formula2 = "=$J" & tierRows(0, 1) & "*1.285"
            Else
                'REG RATE
                Range("M" & tierRows(0, 1)).Formula2 = "=$H" & tierRows(0, 1) & "*1.34"
                'OT RATE
                Range("N" & tierRows(0, 1)).Formula2 = "=$I" & tierRows(0, 1) & "*1.31"
                'DT RATE
                Range("O" & tierRows(0, 1)).Formula2 = "=$J" & tierRows(0, 1) & "*1.31"
            End If
            
        Else
            Sheets("Partners Tier 3").Activate
            firstIndex = 1
        End If
        
        Range("A" & tierRows(firstIndex, 1)).Value = Partners_employees(i)  'name
        Range("B" & tierRows(firstIndex, 1)).Value = Partners_emp_IDs(i)   'ID
        Range("R" & tierRows(firstIndex, 1)).Value = Partners_remarks(i) 'remark
        

        
        
        
        'increment counter
        tierRows(firstIndex, 1) = tierRows(firstIndex, 1) + 1
        
        If firstIndex = 0 Then
            tier1_count = tier1_count + 1
        Else
            tier3_count = tier3_count + 1
        End If
            
    Next i
    
    'Fill in rates for Partners - both tiers
    '
    ' TIER 1
    '
    Sheets("Partners Tier 1").Activate
    For i = 0 To 1
       'Rate formula
        Range("C8").Formula2 = "=INDEX('Export File'!$D$2:$D$" & endr & ",MATCH(1,($A8='Export File'!$A$2:$A$" & endr & ")*(""Regular""='Export File'!$C$2:$C$" & endr & "),0))"
        Range("C8").AutoFill Destination:=Range("C8:C" & tierRows(i, 1) - 1), Type:=xlFillDefault
        
        'Populate UWC TOTAL formula
        Range("Q8").Formula2 = "=SUM(M8:P8, K8)"
        Range("Q8").AutoFill Destination:=Range("Q8:Q" & tierRows(i, 1) - 1), Type:=xlFillDefault
        
        'populate ST hours
        Range("D8").Formula2 = "=VLOOKUP($A8,Pivot!$A$5:$" & lastPivotColumn & "$" & lastPivotRow & "," & STcol & ",FALSE)"
        Range("D8").AutoFill Destination:=Range("D8:D" & tierRows(i, 1) - 1), Type:=xlFillDefault
        
        'Populate OT hours
        Range("E8").Formula2 = "=VLOOKUP($A8,Pivot!$A$5:$" & lastPivotColumn & "$" & lastPivotRow & "," & OTcol & ",FALSE)"
        Range("E8").AutoFill Destination:=Range("E8:E" & tierRows(i, 1) - 1), Type:=xlFillDefault
        
        If DTcol <> 55 Then
            'Populate DT hours
            Range("F8").Formula2 = "=VLOOKUP($A8,Pivot!$A$5:$" & lastPivotColumn & "$" & lastPivotRow & "," & DTcol & ",FALSE)"
            Range("F8").AutoFill Destination:=Range("F8:F" & tierRows(i, 1) - 1), Type:=xlFillDefault
        End If
        
        If SICK <> 55 Then
            'Populate SICK
            Range("G8").Formula2 = "=VLOOKUP($A8,Pivot!$A$5:$" & lastPivotColumn & "$" & lastPivotRow & "," & SICK & ",FALSE)"
            Range("G8").AutoFill Destination:=Range("G8:G" & tierRows(i, 1) - 1), Type:=xlFillDefault
        End If
        
        'Populate ST Hrs. Pay
        Range("H8").Formula2 = "=$D8*$C8"
        Range("H8").AutoFill Destination:=Range("H8:H" & tierRows(i, 1) - 1), Type:=xlFillDefault
        
        'Populate OT Hrs. Pay
        Range("I8").Formula2 = "=$E8*$C8*1.5"
        Range("I8").AutoFill Destination:=Range("I8:I" & tierRows(i, 1) - 1), Type:=xlFillDefault
        
        'Populate DT hrs pay
        Range("J8").Formula2 = "=$F8*$C8*2"
        Range("J8").AutoFill Destination:=Range("J8:J" & tierRows(i, 1) - 1), Type:=xlFillDefault
        
        'Populate ST Hrs. Pay
        Range("K8").Formula2 = "=$G8*$C8"
        Range("K8").AutoFill Destination:=Range("=K8:K" & tierRows(i, 1) - 1), Type:=xlFillDefault
        

        'populate EMP total
        Range("L8").Formula2 = "=SUM($H8:$K8)"
        Range("L8").AutoFill Destination:=Range("=L8:L" & tierRows(i, 1) - 1), Type:=xlFillDefault
        Sheets("Partners Tier 3").Activate
        

    Next i
    
    '------------------------
    'TIER 1 CALCULATIONS
    '------------------------
    Sheets("Partners Tier 1").Activate
    
    'TOTALS
    Range("A" & tierRows(0, 1)) = "TOTALS"
    
    Range("D" & tierRows(0, 1)).Formula2 = "=SUM(D$8:D$" & tierRows(0, 1) - 1 & ")"
    Range("D" & tierRows(0, 1)).AutoFill Destination:=Range("D" & tierRows(0, 1) & ":Q" & tierRows(0, 1)), Type:=ylFillDefault
    
    Range("A" & tierRows(0, 1) & ":Q" & tierRows(0, 1)).Font.Bold = True
    Range("C8:Q" & tierRows(0, 1)).NumberFormat = "_(* #,##0.00_);_(* (#,##0.00);_(* ""-""??_);_(@_)"       'accounting format
    
    'add borders
    Add_PPT1_Borders tierRows(0, 1)
    
    'copy to new worksheet
    Sheets.Add.Name = "Partners T1 FINAL"
    
    Sheets("Partners Tier 1").Range("A:G").Copy
    Sheets("Partners T1 FINAL").Range("A:G").PasteSpecial Paste:=xlPasteValuesAndNumberFormats

    Sheets("Partners Tier 1").Range("A:G").Copy
    Sheets("Partners T1 FINAL").Range("A:G").PasteSpecial Paste:=xlPasteFormats
    
    'Copy totals formulas to the new worksheet
    Sheets("Partners Tier 1").Range(tierRows(0, 1) & ":" & tierRows(0, 1)).Copy Destination:=Worksheets("Partners T1 FINAL").Range(tierRows(0, 1) & ":" & tierRows(0, 1))
    
    Sheets("Partners Tier 1").Range("H:AC").Copy Destination:=Worksheets("Partners T1 FINAL").Range("H:AC")
    Worksheets("Partners Tier 1").Delete       'delete the one with all the formulas
    
    'HIDE COLUMNS
    Sheets("Partners T1 FINAL").Activate
    columns("H:K").Hidden = True
    columns("M:P").Hidden = True
    
    '------------------------
    'TIER 3 RATE CALCULATIONS
    '------------------------
    Sheets("Partners Tier 3").Activate
    
    'REG RATE
    Range("M8").Formula2 = "=$H8*1.345"
    Range("M8").AutoFill Destination:=Range("=M8:M" & tierRows(1, 1) - 1), Type:=xlFillDefault
    'OT RATE
    Range("N8").Formula2 = "=$I8*1.315"
    Range("N8").AutoFill Destination:=Range("=N8:N" & tierRows(1, 1) - 1), Type:=xlFillDefault
    'DT RATE
    Range("O8").Formula2 = "=$J8*1.315"
    Range("O8").AutoFill Destination:=Range("=O8:O" & tierRows(1, 1) - 1), Type:=xlFillDefault
    
      
    'ADD ADDITIONAL COLUMNS FOR TIER 3
    PartnersT3_Supp tierRows(1, 1)
    
    'Calculations for first two columns
    Range("B8").Formula2 = "=$F8*E8"
    Range("B8").AutoFill Destination:=Range("=B8:B" & tierRows(1, 1) - 1), Type:=xlFillDefault
    
    Range("C8").Formula2 = "=$B8*0.015"
    Range("C8").AutoFill Destination:=Range("=C8:C" & tierRows(1, 1) - 1), Type:=xlFillDefault
    
    'VACATION HOURS
    If vacayCol <> 55 Then
        'Calculations for Vacation hours and Pay  - Holiday hours pending due to there not being an option on UKG
        Range("K8").Formula2 = "=VLOOKUP($A8,Pivot!$A$5:$" & lastPivotColumn & "$" & lastPivotRow & "," & vacayCol & ",FALSE)"      'vacation hours
        Range("K8").AutoFill Destination:=Range("K8:K" & tierRows(1, 1) - 1), Type:=xlFillDefault
    End If
    
    'HOLIDAY HOURS
    If holidayCol <> 55 Then
        'Populate HOLIDAY hours
        Range("J8").Formula2 = "=VLOOKUP($A8,Pivot!$A$5:$" & lastPivotColumn & "$" & lastPivotRow & "," & holidayCol & ",FALSE)"
        Range("J8").AutoFill Destination:=Range("J8:J" & tierRows(1, 1) - 1), Type:=xlFillDefault
    End If
    
    'vaction pay calc
    Range("Q8").Formula2 = "=$K8*$E8"
    Range("Q8").AutoFill Destination:=Range("=Q8:Q" & tierRows(1, 1) - 1), Type:=xlFillDefault
    
    'holiday pay calc
    Range("P8").Formula2 = "=$J8*$E8"
    Range("P8").AutoFill Destination:=Range("=P8:P" & tierRows(1, 1) - 1), Type:=xlFillDefault
    
    'Amended EMP TOtal
    Range("R8").Formula2 = "=SUM(L8:Q8)"
    Range("R8").AutoFill Destination:=Range("R8:R" & tierRows(1, 1) - 1), Type:=xlFillDefault
    
    'TOTALS
    Range("A" & tierRows(1, 1)) = "TOTAL"
    'first two columns
    Range("B" & tierRows(1, 1)).Formula2 = "=SUM(B$8:B$" & tierRows(1, 1) - 1 & ")"
    Range("C" & tierRows(1, 1)).Formula2 = "=SUM(C$8:C$" & tierRows(1, 1) - 1 & ")"
    'the rest
    Range("F" & tierRows(1, 1)).Formula2 = "=SUM(F$8:F$" & tierRows(1, 1) - 1 & ")"
    Range("F" & tierRows(1, 1)).AutoFill Destination:=Range("F" & tierRows(1, 1) & ":V" & tierRows(1, 1)), Type:=ylFillDefault
    
    Range("A" & tierRows(1, 1) & ":V" & tierRows(1, 1)).Font.Bold = True   'BOLD TOTALS
    Range("B8:C" & tierRows(0, 1)).NumberFormat = "_(* #,##0.00_);_(* (#,##0.00);_(* ""-""??_);_(@_)"
    Range("E8:V" & tierRows(0, 1)).NumberFormat = "_(* #,##0.00_);_(* (#,##0.00);_(* ""-""??_);_(@_)"
    
    'Add borders
    Add_PPT3_Borders tierRows(1, 1)
    
    'copy to a new worksheet
    
    Sheets.Add.Name = "Partners T3 FINAL"
    
    Sheets("Partners Tier 3").Range("A:A").Copy
    Sheets("Partners T3 FINAL").Range("A:A").PasteSpecial Paste:=xlPasteValuesAndNumberFormats
    Sheets("Partners Tier 3").Range("A:A").Copy
    Sheets("Partners T3 FINAL").Range("A:A").PasteSpecial Paste:=xlPasteFormats
    
    Sheets("Partners Tier 3").Range("D:K").Copy
    Sheets("Partners T3 FINAL").Range("D:K").PasteSpecial Paste:=xlPasteValuesAndNumberFormats
    Sheets("Partners Tier 3").Range("D:K").Copy
    Sheets("Partners T3 FINAL").Range("D:K").PasteSpecial Paste:=xlPasteFormats
    
    'copy bottom totals with formulas
    Sheets("Partners Tier 3").Range(tierRows(1, 1) & ":" & tierRows(1, 1)).Copy Destination:=Worksheets("Partners T3 FINAL").Range(tierRows(1, 1) & ":" & tierRows(1, 1))
    
    'copy columns with formulas
    Sheets("Partners Tier 3").Range("B:C").Copy Destination:=Worksheets("Partners T3 FINAL").Range("B:C")
    Sheets("Partners Tier 3").Range("L:AC").Copy Destination:=Worksheets("Partners T3 FINAL").Range("L:AC")
    Worksheets("Partners Tier 3").Delete       'delete the one with all the formulas
    
    'HIDE COLUMNS
    Sheets("Partners T3 FINAL").Activate
    columns("B:C").Hidden = True    'first two columns after name
    columns("L:Q").Hidden = True    'pay calculations
    columns("S:U").Hidden = True    'Rates
    
    
    'DISPLAY EMAIL
    Dim agencyFileName As String, subjectLine As String, sendTo As String
    agencyFileName = "Partners Personnel - Tier 1a"
    subjectLine = "Partners Personnel Agency-WE: " & weekending
    sendTo = "leticia.varga@partnerspersonnel.com;marie.perez@partnerspersonnel.com"

    Sheets("Partners T1 FINAL").Activate
    create_email agencyFileName, subjectLine, weekending, sendTo, 1
    

End Sub
Private Sub Resource(weekending As String, startr As Integer, endr As Integer, lastPivotRow As Integer, _
                        lastPivotColumn As String, STcol As Integer, OTcol As Integer, DTcol As Integer, _
                        SICK As Integer, vacayCol As Integer, costCenter() As String)
                        
    Sheets("Resource").Activate
    Resource_Setup weekending

    '''
    'Get ACS names, empIds, and rates
    'declare arrays to store name, tier, and employee ID - handle rates separately using a formula
    Dim Resource_total As Integer
    Dim Resource_employees() As String
    Dim Resource_emp_IDs() As String
    Dim Resource_remarks() As String
    
     
    ReDim Preserve Resource_employees(0)
    ReDim Preserve Resource_emp_IDs(0)
    ReDim Preserve Resource_remarks(0)
    Sheets("Export File").Activate
    
    'Initialize first employee from first line
    Resource_total = 1
    Resource_employees(0) = Range("A" & startr).Value     'name
    Resource_emp_IDs(0) = Range("B" & startr).Value     'Emp ID#
    
    'intialize first remark
    For m = 0 To 7
        If Range("H" & startr).Value = costCenter(m) Then
            If m = 2 Or m = 0 Then 'Billing or Accounting Cost Center
                Resource_remarks(0) = "Office-B"
            ElseIf m = 4 Then 'Customer Service
                Resource_remarks(0) = "Office-CS"
            ElseIf m = 5 Then 'Dispatch
                Resource_remarks(0) = "Office-D"
            ElseIf m = 7 Then   'yard Office means Safety
                Resource_remarks(0) = "Office-S"
            ElseIf m = 3 Then   'Billing Write up Department
                Resource_remarks(0) = "Office-WD"
            Else
                Resource_remarks(0) = "Office"
            End If
            Exit For
        Else
            Resource_remarks(0) = "Warehouse"
        End If
    Next m

    
    For i = startr + 1 To endr
        
        If Range("A" & i).Value <> Range("A" & i - 1).Value Then  'new employee (different from previous)
        
            ReDim Preserve Resource_employees(Resource_total)
            ReDim Preserve Resource_emp_IDs(Resource_total)
            ReDim Preserve Resource_remarks(Resource_total)
            
            'remark
            For m = 0 To 7
                If Range("H" & i).Value = costCenter(m) Then
                    If m = 2 Or m = 0 Then 'Billing or Accounting Cost Center
                        Resource_remarks(Resource_total) = "Office-B"
                    ElseIf m = 4 Then 'Customer Service
                        Resource_remarks(Resource_total) = "Office-CS"
                    ElseIf m = 5 Then 'Dispatch
                        Resource_remarks(Resource_total) = "Office-D"
                    ElseIf m = 7 Then   'yard Office means Safety
                        Resource_remarks(Resource_total) = "Office-S"
                    ElseIf m = 3 Then   'Billing Write up Department
                        Resource_remarks(Resource_total) = "Office-WD"
                    Else
                        Resource_remarks(Resource_total) = "Office"
                    End If
                    Exit For
                Else
                    Resource_remarks(Resource_total) = "Warehouse"
                End If
            Next m

            Resource_employees(Resource_total) = Range("A" & i).Value      'name
            Resource_emp_IDs(Resource_total) = Range("B" & i).Value      'ID
            Resource_total = Resource_total + 1   'increment by 1
        End If
        
    Next i
    
    Sheets("Resource").Activate
    
    'Declare start and end variables for the final file
    Dim startResource As Integer
    Dim endResource As Integer
    
    startResource = 9
    endResource = 9
    
    'place values onto new file
    For i = 0 To Resource_total - 1
            Range("A" & endResource).Value = Resource_employees(i)  'name
            Range("B" & endResource).Value = Resource_emp_IDs(i)   'ID
            Range("L" & endResource).Value = Resource_remarks(i)
            'increment counter
            endResource = endResource + 1
    Next i
    
    '------------------------
    '     CALCULATIONS
    '------------------------
    
    'RATE
    Range("C9").Formula2 = "=INDEX('Export File'!$D$2:$D$" & endr & ",MATCH(1,($A9='Export File'!$A$2:$A$" & endr & ")*(""Regular""='Export File'!$C$2:$C$" & endr & "),0))"
    Range("C9").AutoFill Destination:=Range("C9:C" & endResource - 1), Type:=xlFillDefault

    'Total to bill formula
    Range("K9").Formula2 = "=((D9*C9)+(E9*C9*1.5)+(F9*C9*2)+(I9*C9))*$K$1"
    Range("K9").AutoFill Destination:=Range("K9:K" & endResource - 1), Type:=xlFillDefault
    
    'populate ST hours
    Range("D9").Formula2 = "=VLOOKUP($A9,Pivot!$A$5:$" & lastPivotColumn & "$" & lastPivotRow & "," & STcol & ",FALSE)"
    Range("D9").AutoFill Destination:=Range("D9:D" & endResource - 1), Type:=xlFillDefault
    
    'Populate OT hours
    Range("E9").Formula2 = "=VLOOKUP($A9,Pivot!$A$5:$" & lastPivotColumn & "$" & lastPivotRow & "," & OTcol & ",FALSE)"
    Range("E9").AutoFill Destination:=Range("E9:E" & endResource - 1), Type:=xlFillDefault
    
    If DTcol <> 55 Then
        'Populate DT hours
        Range("F9").Formula2 = "=VLOOKUP($A9,Pivot!$A$5:$" & lastPivotColumn & "$" & lastPivotRow & "," & DTcol & ",FALSE)"
        Range("F9").AutoFill Destination:=Range("F9:F" & endResource - 1), Type:=xlFillDefault
    End If
    
    If SICK <> 55 Then
        'Populate SICK
        Range("H9").Formula2 = "=VLOOKUP($A9,Pivot!$A$5:$" & lastPivotColumn & "$" & lastPivotRow & "," & SICK & ",FALSE)"
        Range("H9").AutoFill Destination:=Range("H9:H" & endResource - 1), Type:=xlFillDefault
    End If
    
    If vacayCol <> 55 Then
        'Populate VACATION
        Range("G9").Formula2 = "=VLOOKUP($A9,Pivot!$A$5:$" & lastPivotColumn & "$" & lastPivotRow & "," & vacayCol & ",FALSE)"
        Range("G9").AutoFill Destination:=Range("G9:G" & endResource - 1), Type:=xlFillDefault
    End If
    
    
    calculateTotals startResource, endResource
    Add_border_to_single_table startResource, endResource
    
    'ACCOUNTING FORMAT
    Range("C9:K" & endResource).NumberFormat = "_(* #,##0.00_);_(* (#,##0.00);_(* ""-""??_);_(@_)"
    
    'Copy values and formatting to another sheet
    
    Sheets.Add.Name = "Resource FINAL"
    
    Sheets("Resource").Range("A:J").Copy
    Sheets("Resource FINAL").Range("A:J").PasteSpecial Paste:=xlPasteValuesAndNumberFormats

    Sheets("Resource").Range("A:J").Copy
    Sheets("Resource FINAL").Range("A:J").PasteSpecial Paste:=xlPasteFormats
    
    'Copy formulas from bottom line totals
    Sheets("Resource").Range(endResource & ":" & endResource).Copy Destination:=Worksheets("Resource FINAL").Range(endResource & ":" & endResource)
    
    Sheets("Resource").Range("K:AC").Copy Destination:=Worksheets("Resource FINAL").Range("K:AC")
    
    Worksheets("Resource").Delete       'delete the one with all the formulas
    
    'DISPLAY Email
    Dim agencyFileName As String, subjectLine As String, sendTo As String
    agencyFileName = "book4xls-resource agency"
    subjectLine = "Resource Agency-WE: " & weekending
    sendTo = "mariela.sandoval@resourceemployment.com;caroline.mcmillan@resourceemployment.com"

    Sheets("Resource FINAL").Activate
    create_email agencyFileName, subjectLine, weekending, sendTo
    
End Sub

'
' Calculate totals after all employee information has been added to the appropriate agency sheet
' Applicable for ACS, JAM, OneWay
' @startr - the start row of employee values
' @endr - the end row of employee values + 1
'
Private Sub calculateTotals(start As Integer, endr As Integer)
    Range("A" & endr) = "TOTAL"
    
    ' Enter total formula in first cell and autofill
    Range("D" & endr).Formula2 = "=SUM(D$" & start & ":D$" & endr - 1 & ")"
    Range("D" & endr).AutoFill Destination:=Range("D" & endr & ":K" & endr), Type:=ylFillDefault
    
    ' BOLD TOTALS
    Range("A" & endr & ":K" & endr).Font.Bold = True
    
    'Set Number format to Accounting/Currency
    Range("C8:K" & endr).Select
    Selection.NumberFormat = "_(* #,##0.00_);_(* (#,##0.00);_(* ""-""??_);_(@_)"
    
End Sub


    
Private Sub ACS_Setup_Part1(weekending As String)
    Worksheets("ACS Staffing").Activate
    Range("A2") = "TEL (562) 376-9424"
    Range("A3").Select
    ActiveCell.FormulaR1C1 = "FAX (562) 299-5527"
    Range("A4").Select
    ActiveCell.FormulaR1C1 = "ATTN:LORENA"
    Range("A5").Select
    ActiveCell.FormulaR1C1 = "WEEK ENDING: " & weekending
    Range("A6").Select
    ActiveCell.FormulaR1C1 = "Tier 1-G Labor"
    Range("A8").Select
    ActiveCell.FormulaR1C1 = "UNIVERSAL WAREHOUSE CO."
    Range("A9").Select
    ActiveCell.FormulaR1C1 = "NAME"
    Range("B9").Select
    ActiveCell.FormulaR1C1 = "EMP#"
    Range("C9").Select
    ActiveCell.FormulaR1C1 = "RATE"
    Range("D9").Select
    ActiveCell.FormulaR1C1 = "ST HOURS"
    Range("E9").Select
    ActiveCell.FormulaR1C1 = "OT HOURS"
    Range("F9").Select
    ActiveCell.FormulaR1C1 = "DT HRS"
    Range("G9").Select
    ActiveCell.FormulaR1C1 = "VACATION"
    Range("H9").Select
    ActiveCell.FormulaR1C1 = "SICK"
    Range("I9").Select
    ActiveCell.FormulaR1C1 = "EXTRA PAY"
    Range("J9").Select
    ActiveCell.FormulaR1C1 = "TOTAL"
    Range("K9").Select
    Range("K8").Select
    Range("L9").Value = "REMARKS"
    Range("K8:K9").Select
    With Selection
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlBottom
        .WrapText = False
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = False
    End With
    Selection.Merge
    Range("K8:K9").Select
    ActiveCell.FormulaR1C1 = "TOTAL TO BILL"
    Range("K8:K9").Select
    With Selection
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlBottom
        .WrapText = True
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = True
    End With
    Range("L17").Select
End Sub


Private Sub ACS_Setup_Part2()

    Range("A10").Select
    Range("B27").Select
    Rows("2:9").Select
    Selection.Copy
    Rows("59:59").Select
    ActiveSheet.Paste
    Range("A63").Select
    Application.CutCopyMode = False
    ActiveCell.FormulaR1C1 = "Tier 1-G Clerical"
    Range("A64").Select
    Range("K58").Select
    ActiveCell.FormulaR1C1 = "1.3"
    Range("K1").Select
    ActiveCell.FormulaR1C1 = "1.34"
    Range("K2").Select
    Range("A85").Select
    Rows("85:85").Select
    Selection.RowHeight = 36.75
    Selection.RowHeight = 37.5
    With Selection.Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .Color = 5296274
        .TintAndShade = 0
        .PatternTintAndShade = 0
    End With
    Range("K86").Select
    ActiveCell.FormulaR1C1 = "1.3614"
    Rows("87:87").Select
    ActiveWindow.SmallScroll Down:=-45
    Rows("59:66").Select
    ActiveWindow.SmallScroll Down:=-69
    Rows("2:9").Select
    Selection.Copy
    ActiveWindow.SmallScroll Down:=72
    Range("A87").Select
    ActiveSheet.Paste
    Range("A91").Select
    Application.CutCopyMode = False
    ActiveCell.FormulaR1C1 = "Tier 2-G Labor"
    Range("A92").Select
    Rows("85:85").Select
    Selection.Copy
    ActiveWindow.SmallScroll Down:=21
    Rows("122:122").Select
    ActiveSheet.Paste
    ActiveWindow.SmallScroll Down:=3
    Range("B124").Select
    ActiveWindow.SmallScroll Down:=-21
    Rows("87:94").Select
    Application.CutCopyMode = False
    Selection.Copy
    ActiveWindow.SmallScroll Down:=24
    Range("A124").Select
    ActiveSheet.Paste
    Range("F132").Select
    ActiveWindow.SmallScroll Down:=0
    Range("A128").Select
    Application.CutCopyMode = False
    ActiveCell.FormulaR1C1 = "Tier 2-G Clerical"
    Range("K123").Select
    ActiveCell.FormulaR1C1 = "1.3214"
    Range("K124").Select
    ActiveWindow.SmallScroll Down:=-153
'
'
' Add borders to final tables after names have been placed and rowcounts have been initialized
'
'
    Range("A9:J9").Select
    Selection.Borders(xlDiagonalDown).LineStyle = xlNone
    Selection.Borders(xlDiagonalUp).LineStyle = xlNone
    With Selection.Borders(xlEdgeLeft)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlEdgeTop)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlEdgeBottom)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlEdgeRight)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlInsideVertical)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlInsideHorizontal)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    Range("K8:K9").Select
    Selection.Borders(xlDiagonalDown).LineStyle = xlNone
    Selection.Borders(xlDiagonalUp).LineStyle = xlNone
    With Selection.Borders(xlEdgeLeft)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlEdgeTop)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlEdgeBottom)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlEdgeRight)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlInsideVertical)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlInsideHorizontal)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    Range("L9").Select
    Selection.Borders(xlDiagonalDown).LineStyle = xlNone
    Selection.Borders(xlDiagonalUp).LineStyle = xlNone
    With Selection.Borders(xlEdgeLeft)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlEdgeTop)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlEdgeBottom)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlEdgeRight)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlInsideVertical)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlInsideHorizontal)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
      
    Range("A66:J66").Select
    Selection.Borders(xlDiagonalDown).LineStyle = xlNone
    Selection.Borders(xlDiagonalUp).LineStyle = xlNone
    With Selection.Borders(xlEdgeLeft)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlEdgeTop)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlEdgeBottom)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlEdgeRight)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlInsideVertical)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlInsideHorizontal)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    Range("K65:K66").Select
    Selection.Borders(xlDiagonalDown).LineStyle = xlNone
    Selection.Borders(xlDiagonalUp).LineStyle = xlNone
    With Selection.Borders(xlEdgeLeft)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlEdgeTop)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlEdgeBottom)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlEdgeRight)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlInsideVertical)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlInsideHorizontal)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    Range("L66").Select
    Selection.Borders(xlDiagonalDown).LineStyle = xlNone
    Selection.Borders(xlDiagonalUp).LineStyle = xlNone
    With Selection.Borders(xlEdgeLeft)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlEdgeTop)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlEdgeBottom)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlEdgeRight)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlInsideVertical)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlInsideHorizontal)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    ActiveWindow.SmallScroll Down:=33
    Range("A94:J94").Select
    Selection.Borders(xlDiagonalDown).LineStyle = xlNone
    Selection.Borders(xlDiagonalUp).LineStyle = xlNone
    With Selection.Borders(xlEdgeLeft)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlEdgeTop)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlEdgeBottom)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlEdgeRight)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlInsideVertical)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlInsideHorizontal)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    Range("K93:K94").Select
    Selection.Borders(xlDiagonalDown).LineStyle = xlNone
    Selection.Borders(xlDiagonalUp).LineStyle = xlNone
    With Selection.Borders(xlEdgeLeft)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlEdgeTop)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlEdgeBottom)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlEdgeRight)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlInsideVertical)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlInsideHorizontal)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    Range("L94").Select
    Selection.Borders(xlDiagonalDown).LineStyle = xlNone
    Selection.Borders(xlDiagonalUp).LineStyle = xlNone
    With Selection.Borders(xlEdgeLeft)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlEdgeTop)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlEdgeBottom)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlEdgeRight)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlInsideVertical)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlInsideHorizontal)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    ActiveWindow.SmallScroll Down:=33
    Range("A131:J131").Select
    Selection.Borders(xlDiagonalDown).LineStyle = xlNone
    Selection.Borders(xlDiagonalUp).LineStyle = xlNone
    With Selection.Borders(xlEdgeLeft)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlEdgeTop)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlEdgeBottom)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlEdgeRight)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlInsideVertical)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlInsideHorizontal)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    Range("K130:K131").Select
    Selection.Borders(xlDiagonalDown).LineStyle = xlNone
    Selection.Borders(xlDiagonalUp).LineStyle = xlNone
    With Selection.Borders(xlEdgeLeft)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlEdgeTop)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlEdgeBottom)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlEdgeRight)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlInsideVertical)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlInsideHorizontal)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    Range("L131").Select
    Selection.Borders(xlDiagonalDown).LineStyle = xlNone
    Selection.Borders(xlDiagonalUp).LineStyle = xlNone
    With Selection.Borders(xlEdgeLeft)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlEdgeTop)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlEdgeBottom)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlEdgeRight)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlInsideVertical)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlInsideHorizontal)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    
End Sub

Private Sub JAM_setup(weekEnd As String)
'
' JAM_setup Macro
'

'
    Worksheets("JAM Staffing").Activate
        
    'create headers
    Sheets("JAM Staffing").Select
    Range("A1").Select
    ActiveCell.FormulaR1C1 = "J.A.M. Staffing Services, Inc."
    Range("A2").Select
    ActiveCell.FormulaR1C1 = "TEL: 562-803-1400"
    Range("A3").Select
    ActiveCell.FormulaR1C1 = "FAX: 562-803-1420"
    Range("A4").Select
    ActiveCell.FormulaR1C1 = "ATTN: Jennifer Cruz"
    Range("A5").Select
    ActiveCell.FormulaR1C1 = "WEEK ENDING: " & weekEnd
    Range("A7").Select
    ActiveCell.FormulaR1C1 = "UNIVERSAL WAREHOUSE CO."
    Range("A8").Select
    ActiveCell.FormulaR1C1 = "NAME"
    Range("B8").Select
    ActiveCell.FormulaR1C1 = "EMP #"
    Range("C8").Select
    ActiveCell.FormulaR1C1 = "RATE"
    Range("D8").Select
    ActiveCell.FormulaR1C1 = "ST HOURS"
    Range("E8").Value = "OT HOURS"
    Range("F8").Value = "DT HRS"
    Range("G8").Value = "VACATION"
    Range("H8").Value = "SICK"
    Range("I8").Value = "EXTRA PAY"
    Range("J8").Select
    ActiveCell.FormulaR1C1 = "TOTAL HRS"
    Range("K8").Select
    ActiveCell.FormulaR1C1 = "TOTAL TO BILL"
    Range("L8").Select
    ActiveCell.FormulaR1C1 = "REMARKS"
    Cells.Select
    Cells.EntireColumn.AutoFit
    Range("L1").Select
    ActiveCell.FormulaR1C1 = "1.33"
    Range("H2").Select
    
    Range("K7:K8").Select
    With Selection
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlBottom
        .WrapText = False
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = False
    End With
    Selection.Merge
    columns("K:K").ColumnWidth = 10
    With Selection
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlBottom
        .WrapText = True
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = True
    End With
    
    
    'Add borders to headers
        Range("A8:J8").Select
    Selection.Borders(xlDiagonalDown).LineStyle = xlNone
    Selection.Borders(xlDiagonalUp).LineStyle = xlNone
    With Selection.Borders(xlEdgeLeft)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlEdgeTop)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlEdgeBottom)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlEdgeRight)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlInsideVertical)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlInsideHorizontal)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    Range("K7:K8").Select
    Selection.Borders(xlDiagonalDown).LineStyle = xlNone
    Selection.Borders(xlDiagonalUp).LineStyle = xlNone
    With Selection.Borders(xlEdgeLeft)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlEdgeTop)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlEdgeBottom)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlEdgeRight)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlInsideVertical)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlInsideHorizontal)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    Range("L8").Select
    Selection.Borders(xlDiagonalDown).LineStyle = xlNone
    Selection.Borders(xlDiagonalUp).LineStyle = xlNone
    With Selection.Borders(xlEdgeLeft)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlEdgeTop)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlEdgeBottom)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlEdgeRight)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlInsideVertical)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlInsideHorizontal)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    
End Sub


Private Sub Payroll_Sort()
'
' Renames initial Sheet outputted by UKG to Export File
' Sort by agency, tier, employee name
'
    'Dynamic last row
    Dim lastRow As Integer
    lastRow = Range("A1").End(xlDown).row
    
    ActiveSheet.Name = "Export File"
    Range("A1:I" & lastRow).Select
    Range("D7").Activate
    Application.CutCopyMode = False
    ActiveWorkbook.Worksheets("Export File").Sort.SortFields.Clear
    ActiveWorkbook.Worksheets("Export File").Sort.SortFields.Add2 Key:=Range( _
        "G2:G" & lastRow), SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:= _
        xlSortNormal
    With ActiveWorkbook.Worksheets("Export File").Sort
        .SetRange Range("A1:I" & lastRow)
        .Header = xlYes
        .MatchCase = False
        .Orientation = xlTopToBottom
        .SortMethod = xlPinYin
        .Apply
    End With
    ActiveWorkbook.Worksheets("Export File").Sort.SortFields.Clear
    ActiveWorkbook.Worksheets("Export File").Sort.SortFields.Add2 Key:=Range( _
        "G2:G" & lastRow), SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:= _
        xlSortNormal
    ActiveWorkbook.Worksheets("Export File").Sort.SortFields.Add2 Key:=Range( _
        "I2:I" & lastRow), SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:= _
        xlSortNormal
    With ActiveWorkbook.Worksheets("Export File").Sort
        .SetRange Range("A1:I" & lastRow)
        .Header = xlYes
        .MatchCase = False
        .Orientation = xlTopToBottom
        .SortMethod = xlPinYin
        .Apply
    End With
     ActiveWorkbook.Worksheets("Export File").Sort.SortFields.Clear
    ActiveWorkbook.Worksheets("Export File").Sort.SortFields.Add2 Key:=Range( _
        "G2:G" & lastRow), SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:= _
        xlSortNormal
    ActiveWorkbook.Worksheets("Export File").Sort.SortFields.Add2 Key:=Range( _
        "I2:I" & lastRow), SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:= _
        xlSortNormal
    ActiveWorkbook.Worksheets("Export File").Sort.SortFields.Add2 Key:=Range( _
        "A2:A" & lastRow), SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:= _
        xlSortNormal
    With ActiveWorkbook.Worksheets("Export File").Sort
        .SetRange Range("A1:I" & lastRow)
        .Header = xlYes
        .MatchCase = False
        .Orientation = xlTopToBottom
        .SortMethod = xlPinYin
        .Apply
    End With
    Range("I6").Select
    
    
End Sub
Private Sub PivotTable(lastRowFromExportFile As Integer)
'
' PivotTable Macro
' Create simple pivot table
'

'
    Application.CutCopyMode = False
    Sheets.Add.Name = "Pivot"
    ActiveWorkbook.PivotCaches.Create(SourceType:=xlDatabase, SourceData:= _
        "Export File!R1C1:R" & lastRowFromExportFile & "C9", Version:=7).CreatePivotTable TableDestination:= _
        "Pivot!R3C1", TableName:="PivotTable2", DefaultVersion:=7
    Sheets("Pivot").Select
    Cells(3, 1).Select
    With ActiveSheet.PivotTables("PivotTable2")
        .ColumnGrand = True
        .HasAutoFormat = True
        .DisplayErrorString = False
        .DisplayNullString = True
        .EnableDrilldown = True
        .ErrorString = ""
        .MergeLabels = False
        .NullString = ""
        .PageFieldOrder = 2
        .PageFieldWrapCount = 0
        .PreserveFormatting = True
        .RowGrand = True
        .SaveData = True
        .PrintTitles = False
        .RepeatItemsOnEachPrintedPage = True
        .TotalsAnnotation = False
        .CompactRowIndent = 1
        .InGridDropZones = False
        .DisplayFieldCaptions = True
        .DisplayMemberPropertyTooltips = False
        .DisplayContextTooltips = True
        .ShowDrillIndicators = True
        .PrintDrillIndicators = False
        .AllowMultipleFilters = False
        .SortUsingCustomLists = True
        .FieldListSortAscending = False
        .ShowValuesRow = False
        .CalculatedMembersInFilters = False
        .RowAxisLayout xlCompactRow
    End With
    With ActiveSheet.PivotTables("PivotTable2").PivotCache
        .RefreshOnFileOpen = False
        .MissingItemsLimit = xlMissingItemsDefault
    End With
    ActiveSheet.PivotTables("PivotTable2").RepeatAllLabels xlRepeatLabels
    With ActiveSheet.PivotTables("PivotTable2").PivotFields("Employee Name")
        .Orientation = xlRowField
        .Position = 1
    End With
    With ActiveSheet.PivotTables("PivotTable2").PivotFields("Pay Code")
        .Orientation = xlColumnField
        .Position = 1
    End With
    ActiveSheet.PivotTables("PivotTable2").AddDataField ActiveSheet.PivotTables( _
        "PivotTable2").PivotFields("Total Hours"), "Sum of Total Hours", xlSum
End Sub
Private Function totalOT_Pivot(lastPivotRow As Integer, lastPivotColumn As Integer, weekOTColumn As String, dailyOTcolumn As String) As String
'
' Adds an additional column to the pivot table for total overtime
' calcTotalOverTIme_Pivot Macro
' returns the column number of the total overtime (last column)
'
'
    Dim totalOTcol As String
    Dim lastPivotCol As String
    
    lastPivotCol = Split(Cells(1, lastPivotColumn).Address, "$")(1)
    totalOTcol = Split(Cells(1, lastPivotColumn + 1).Address, "$")(1)       'total OT column letter
    
    Range(totalOTcol & "4").Value = "TOTAL OVERTIME"
    Range(totalOTcol & "4").EntireColumn.AutoFit
    
    If weekOTColumn = "NONE" And dailyOTcolumn <> "NONE" Then               'if no daily OT column
        Range(totalOTcol & "5").Formula2 = "=" & dailyOTcolumn & "5"
        
    ElseIf weekOTColumn <> "NONE" And dailyOTcolumn = "NONE" Then           'if no weekly OT column
        Range(totalOTcol & "5").Formula2 = "=" & weekOTColumn & "5"
        
    ElseIf weekOTColumn = "NONE" And dailyOTcolumn = "NONE" Then            'if neither OT column exists
        Range(totalOTcol & "5").Value = 0
    Else                                                                    'if both exist
        Range(totalOTcol & "5").Formula2 = "=SUM(" & weekOTColumn & "5," & dailyOTcolumn & "5)"      'get the two overtime columns
    End If
    
    Range(totalOTcol & "5").Select
    Selection.AutoFill Destination:=Range(totalOTcol & "5:" & totalOTcol & lastPivotRow), Type:=xlFillDefault
    Range(lastPivotCol & "4").Select
    Selection.Copy
    Range(totalOTcol & "4").Select
    Selection.PasteSpecial Paste:=xlPasteFormats, Operation:=xlNone, _
        SkipBlanks:=False, Transpose:=False
    Application.CutCopyMode = False
    
    totalOT_Pivot = totalOTcol
    
    
End Function

Private Sub Add_PPT1_Borders(lastRow As Integer)

' this procedure is only for Partners Personnel Tier 1

 Range("A7:R" & lastRow).Select
    Selection.Borders(xlDiagonalDown).LineStyle = xlNone
    Selection.Borders(xlDiagonalUp).LineStyle = xlNone
    With Selection.Borders(xlEdgeLeft)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlEdgeTop)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlEdgeBottom)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlEdgeRight)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlInsideVertical)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlInsideHorizontal)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    Cells.Select
    Cells.EntireColumn.AutoFit
End Sub

Private Sub Add_PPT3_Borders(lastRow As Integer)
'this procedure is only for Partners Tier 3

 Range("A7:W" & lastRow).Select
    Selection.Borders(xlDiagonalDown).LineStyle = xlNone
    Selection.Borders(xlDiagonalUp).LineStyle = xlNone
    With Selection.Borders(xlEdgeLeft)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlEdgeTop)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlEdgeBottom)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlEdgeRight)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlInsideVertical)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlInsideHorizontal)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    Cells.Select
    Cells.EntireColumn.AutoFit
End Sub

Private Sub Add_border_to_single_table(startRow As Integer, lastRow As Integer)
'
' Can be used for all agencies - just make sure to border any and all headers in the intial setup procedure
'
'
    Range("A" & startRow & ":L" & lastRow).Select
    Selection.Borders(xlDiagonalDown).LineStyle = xlNone
    Selection.Borders(xlDiagonalUp).LineStyle = xlNone
    With Selection.Borders(xlEdgeLeft)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlEdgeTop)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlEdgeBottom)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlEdgeRight)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlInsideVertical)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlInsideHorizontal)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    Cells.Select
    Cells.EntireColumn.AutoFit
End Sub



Private Sub OneWay_Setup(weekending As String)
'
' OneWay_Setup Macro
'

    Range("A1").Value = "Oneway Staffing Agency"
    Range("A1").Font.Bold = True
    Range("A2").Value = "TEL:"
    Range("A3").Value = "FAX:"
    Range("A4").Value = "ATTN: Yanira/Alice"
    Range("A5").Value = "WEEK ENDING: " & weekending
    Range("A7").Value = "UNIVERSAL WAREHOUSE CO."
    Range("A8").Value = "NAME"
    Range("B8").Value = "EMP#"
    Range("C8").Value = "RATE"
    Range("D8").Value = "ST HOURS"
    Range("E8").Value = "OT HOURS"
    Range("F8").Value = "DT HOURS"
    Range("G8").Value = "VACATION"
    Range("H8").Value = "SICK"
    Range("I8").Value = "EXTRA PAY"
    Range("J8").Value = "TOTAL HRS"
    Range("K8").Value = "TOTAL TO BILL"
    Range("L8").Value = "REMARKS"
    Range("L1").Value = 1.3
    Range("B4").Select
End Sub

Private Sub oneway_headerBorders()
'
' oneway_headerBorders Macro
'

'
    Range("A8:L8").Select
    Range("L8").Activate
    Selection.Borders(xlDiagonalDown).LineStyle = xlNone
    Selection.Borders(xlDiagonalUp).LineStyle = xlNone
    With Selection.Borders(xlEdgeLeft)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlEdgeTop)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlEdgeBottom)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlEdgeRight)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlInsideVertical)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlInsideHorizontal)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    Range("K7:K8").Select
    With Selection
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlBottom
        .WrapText = False
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = False
    End With
    Selection.Merge
    Range("K7:K8").Select
    With Selection
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlBottom
        .WrapText = True
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = True
    End With
    Selection.Borders(xlDiagonalDown).LineStyle = xlNone
    Selection.Borders(xlDiagonalUp).LineStyle = xlNone
    With Selection.Borders(xlEdgeLeft)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlEdgeTop)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlEdgeBottom)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlEdgeRight)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlInsideVertical)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlInsideHorizontal)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    Cells.Select
    Cells.EntireColumn.AutoFit
End Sub


Private Sub Partners_Setup_PT1(weekending As String, tier As Integer)
'
' Partners_Setup Macro
'
    
    Range("A1").Value = "Partners-Nexem Agency"
    Range("A2").Value = "Tel: 310-715-1487"
    Range("A3").Value = "WEEK ENDING: " & weekending
    Range("A5").Value = "UNIVERSAL WAREHOUSE CO."
    Range("A4").Value = "Tier " & tier
    Range("A7").Value = "NAME"
    Range("B7").Value = "Employee ID#"
    Range("C7").Value = "Rate"
    Range("D7").Value = "ST Hours"
    Range("E7").Value = "OT Hours"
    Range("F7").Value = "DT Hours"
    Range("G7").Value = "Sick "
    Range("H7").Value = "ST Hrs. Pay"
    Range("I7").Value = "OT Hrs. Pay"
    Range("J7").Value = "DT Hrs. Pay"
    Range("K7").Value = "Sick Hrs. Pay"
    Range("L7").Value = "Emp Total"
    Range("M7").Value = "Reg Rate"
    Range("N7").Value = "OT Rate"
    Range("O7").Value = "DT Rate"
    Range("P7").Value = "Sick   No Mark-up"
    Range("Q7").Value = "UWC Total"
    Range("R7").Value = "Remarks"
    Range("A8").Select
    
'    Range("G34").Value = "Warehouse T1"
'    Range("G35").Value = "Office T1"
'    Range("G36").Value = "Office-C/S"
'    Range("G37").Value = "Office-D"
'
'    Range("L34").Value = "6110"
'    Range("L35").Value = "7090"
'    Range("L36").Value = "6115"
'    Range("L37").Value = "6120"
    

End Sub
Private Sub PartnersT3_Supp(lastRow As Integer)
'
' Partners3_Supplemental Macro
'
' This adds the two columns right after employee name and deletes sick mark up column
'
' 05-03-22 : Also adds Holday, Vacation, Holiday Pay, and Vacation Pay column

'
    Sheets("Partners Tier 3").Activate
    columns("B:B").Select
    Selection.Insert Shift:=xlToRight, CopyOrigin:=xlFormatFromLeftOrAbove
    columns("B:B").Select
    Selection.Insert Shift:=xlToRight, CopyOrigin:=xlFormatFromLeftOrAbove
    Range("B7").Select
    ActiveCell.FormulaR1C1 = "For ACA Billing Calculation"
    Range("C7").Select
    ActiveCell.FormulaR1C1 = "Individual ACA Charge"
    Range("B7:C7").Select
    Selection.Font.Bold = True
    Range("D7:E7").Select
    Range("E7").Activate
    With Selection.Font
        .ColorIndex = xlAutomatic
        .TintAndShade = 0
    End With
    columns("R:R").Select
    Selection.Delete Shift:=xlToLeft
    Range("R8").Select
    
    Range("N7:N" & lastRow).Select
    With Selection.Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .Color = 13421823
        .TintAndShade = 0
        .PatternTintAndShade = 0
    End With
    Range("R7:R" & lastRow).Select
    With Selection.Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .ThemeColor = xlThemeColorAccent5
        .TintAndShade = 0.799981688894314
        .PatternTintAndShade = 0
    End With
    
    
    'Vacation and Holiday columns
    columns("J:J").Select
    Selection.Insert Shift:=xlToRight, CopyOrigin:=xlFormatFromLeftOrAbove
    columns("K:K").Select
    Selection.Insert Shift:=xlToRight, CopyOrigin:=xlFormatFromLeftOrAbove
    Range("J7").Value = "Holiday"
    Range("K7").Value = "Vacation"
    Range("J8").Select
    columns("J:J").EntireColumn.AutoFit
    columns("K:K").EntireColumn.AutoFit
    columns("P:P").Select
    Selection.Insert Shift:=xlToRight, CopyOrigin:=xlFormatFromLeftOrAbove
    columns("Q:Q").Select
    Selection.Insert Shift:=xlToRight, CopyOrigin:=xlFormatFromLeftOrAbove
    Range("P7").Value = "Holiday Pay"
    Range("Q7").Value = "Vacation Pay"
    Range("P8").Select
    
End Sub

Private Sub Partners_setup_pt2()
'
' Partners_setup_pt2 Macro
'

'
    Range("A3").Select
    With Selection.Font
        .Color = -4165632
        .TintAndShade = 0
    End With
    With Selection.Font
        .Color = -10477568
        .TintAndShade = 0
    End With
    Range("A3").Select
    With Selection.Font
        .ThemeColor = xlThemeColorAccent1
        .TintAndShade = -0.499984740745262
    End With
    With Selection.Font
        .Color = -8713970
        .TintAndShade = 0
    End With
    Range("B7:Q7").Select
    With Selection.Font
        .Color = -8713970
        .TintAndShade = 0
    End With
    Selection.Font.Bold = True
    Range("A7:Q7").Select
    Selection.Borders(xlDiagonalDown).LineStyle = xlNone
    Selection.Borders(xlDiagonalUp).LineStyle = xlNone
    With Selection.Borders(xlEdgeLeft)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlEdgeTop)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlEdgeBottom)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlEdgeRight)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    Selection.Borders(xlInsideVertical).LineStyle = xlNone
    Selection.Borders(xlInsideHorizontal).LineStyle = xlNone
    Range("A7:Q7").Select
    Range("Q7").Activate
    Selection.Borders(xlDiagonalDown).LineStyle = xlNone
    Selection.Borders(xlDiagonalUp).LineStyle = xlNone
    With Selection.Borders(xlEdgeLeft)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlEdgeTop)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlEdgeBottom)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlEdgeRight)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlInsideVertical)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlInsideHorizontal)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    Range("Q7").Select
End Sub

Private Sub Resource_Setup(weekending As String)
'
' Resource_Setup Macro
'

'
    Sheets("Resource").Select
    Range("A1").Value = "RESOURCE EMPLOYMENT SOLUTIONS"
    Range("A2").Value = "TEL (321) 234-9363"
    Range("A3").Value = "FAX"
    Range("A4").Value = "ATTN: MARIELA/MARLYN"
    Range("A5").Value = "WEEK ENDING: " & weekending
    Range("A7").Value = "UNIVERSAL WAREHOUSE CO."
    Range("A8").Value = "NAME"
    Range("B8").Value = "EMP #"
    Range("C8").Value = "RATE"
    Range("D8").Value = "ST HRS"
    Range("E8").Value = "OT HRS"
    Range("F8").Value = "DT HRS"
    Range("E8").Value = "OT HRS"
    Range("D8").Value = "ST HRS"
    Range("G8").Value = "VACATION"
    Range("H8").Value = "SICK"
    Range("I8").Value = "EXTRA PAY"
    Range("J8").Value = "TOTAL HRS"
    Range("K8").Value = "TOTAL TO BILL"
    Range("K1").Value = 1.33
    Range("L8").Value = "REMARKS"
    Range("A8:J8").Select
    Selection.Borders(xlDiagonalDown).LineStyle = xlNone
    Selection.Borders(xlDiagonalUp).LineStyle = xlNone
    With Selection.Borders(xlEdgeLeft)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlEdgeTop)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlEdgeBottom)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlEdgeRight)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlInsideVertical)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlInsideHorizontal)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    Range("K7:K8").Select
    With Selection
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlBottom
        .WrapText = False
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = False
    End With
    Selection.Merge
    With Selection
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlBottom
        .WrapText = True
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = True
    End With
    Selection.Borders(xlDiagonalDown).LineStyle = xlNone
    Selection.Borders(xlDiagonalUp).LineStyle = xlNone
    With Selection.Borders(xlEdgeLeft)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlEdgeTop)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlEdgeBottom)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlEdgeRight)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlInsideVertical)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlInsideHorizontal)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    Range("L8").Select
    Selection.Borders(xlDiagonalDown).LineStyle = xlNone
    Selection.Borders(xlDiagonalUp).LineStyle = xlNone
    With Selection.Borders(xlEdgeLeft)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlEdgeTop)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlEdgeBottom)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlEdgeRight)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlInsideVertical)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlInsideHorizontal)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    Cells.Select
    Cells.EntireColumn.AutoFit
    Range("D8").Select
End Sub

' ADDED 8/28/2022
' ADDS NEW RECLASSIFICATION CATEGORY COLUMN TO EXPORT FILE TAB  WHICH DEPENDS ON THE VALUE OF COST CENTER 2
' INTENDED FOR THE PURPOSE OF REPORTING - PER VICKIE'S REQUEST ON 8/23/22
Private Sub addReclassColumn()

    'ADD NEW COLUMN HEADER
    Range("J1").Value = "Reclassification"

    'GET LAST ROW OF EXPORT FILE
    Dim exportFileEndRow As Integer
    exportFileEndRow = Range("A1").End(xlDown).row

    ' @costCenter2 - holds all clerical(non WHSE) cost centers
    ' @reclass - reclassification categories
    Dim costcenter2Reclass(7, 1) As String  '8 total
    
    'cost center 2
    costcenter2Reclass(0, 0) = "Accounting"
    costcenter2Reclass(1, 0) = "Admin"
    costcenter2Reclass(2, 0) = "Billing"
    costcenter2Reclass(3, 0) = "Billing Write Up"
    costcenter2Reclass(4, 0) = "Customer Service"
    costcenter2Reclass(5, 0) = "Dispatch"
    costcenter2Reclass(6, 0) = "Office"
    costcenter2Reclass(7, 0) = "Yard Office"
    
    'reclassification - this corresponds with the data above
    costcenter2Reclass(0, 1) = "Clerical - Admin"
    costcenter2Reclass(1, 1) = "Clerical - Admin"
    costcenter2Reclass(2, 1) = "Clerical - Admin"
    costcenter2Reclass(3, 1) = "Clerical - Admin"
    costcenter2Reclass(4, 1) = "Clerical - Customer Service"
    costcenter2Reclass(5, 1) = "Clerical - Trucking"
    costcenter2Reclass(6, 1) = "Clerical - Admin"
    costcenter2Reclass(7, 1) = "Clerical - Admin"
    

    
    'H is cost center 2 column
    'J is new column
    For i = 2 To exportFileEndRow
        For j = 0 To 7
            If Range("H" & i).Value = costcenter2Reclass(j, 0) Then
                Range("J" & i) = costcenter2Reclass(j, 1)
                Exit For
            End If
           Range("J" & i) = "Warehouse Workers"
    
        Next j
    Next i
                    
    
End Sub

